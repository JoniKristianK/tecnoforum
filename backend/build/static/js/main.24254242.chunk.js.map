{"version":3,"sources":["utils/StateProvider.js","actions/loginActions.js","reducers/loginReducer.js","actions/registerActions.js","reducers/registerReducer.js","actions/categoryActions.js","reducers/categoryReducer.js","reducers/reducers.js","components/TText.js","components/Login.js","components/NavBar.js","components/CategoryRow.js","components/ListAllCategories.js","App.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","loginSuccess","data","type","loginFailed","error","logoutSuccess","logoutFailed","loginInit","sessionStorage","getItem","loginstate","JSON","parse","token","user","isLogged","loadInitialState","LoginReducer","login","action","console","log","state","loading","setItem","stringify","registerSuccess","registerFailed","registerInit","registerstate","success","RegisterReducer","register","fetchCategoriesSuccess","categories","fetchCategoriesFailed","categoryInit","categorystate","threads","category","CategoryReducer","TText","v","g","p","c","Typography","variant","gutterBottom","paragraph","component","TabPanel","props","index","role","hidden","Box","useStyles","makeStyles","theme","root","position","width","height","padding","top","left","box","tabs","content","input","paddingBottom","alert","withRouter","dispatch","useEffect","closeLoginBar","useState","tab","setTab","username","password","nickname","loginForm","setloginForm","onChange","event","target","name","classes","loginFail","length","Fragment","Alert","severity","className","AlertTitle","registerFail","Paper","elevation","Tabs","indicatorColor","textColor","newValue","openCloseLoginBar","Tab","label","id","TextField","required","Button","onClick","preventDefault","email","request","method","mode","headers","body","fetch","then","response","ok","status","json","catch","onRegister","history","push","onLogin","toolbar","backgroundColor","borderBottom","palette","divider","right","ButtonGroup","showLoginBar","loginBar","setLoginBar","Toolbar","href","e","dest","src","color","aria-label","Authorization","onLogout","StyledTableCell","withStyles","head","common","black","white","fontSize","TableCell","StyledTableRow","hover","TableRow","CategoryRow","item","categoryName","description","scope","size","align","getCategories","getAttribute","map","key","TableContainer","Table","TableHead","TableBody","match","Container","maxWidth","style","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24254242.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from 'react';\r\nexport const StateContext = createContext();\r\nexport const StateProvider = ({reducer, initialState, children}) =>(\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);","// import { clearContactReducerState, getContacts } from './contactActions';\r\n\r\n//Action constants\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS',\r\n\tLOGIN_FAILED = 'LOGIN_FAILED',\r\n\tLOGOUT_SUCCESS = 'LOGOUT_SUCCESS',\r\n\tLOGOUT_FAILED = 'LOGOUT_FAILED';\r\n\r\n//Async Actions\r\n\r\nexport const onLogin = (dispatch, user, history) => {\r\n    let request = {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify(user),\r\n    };\r\n    // dispatch(loading());\r\n    fetch('/api/users/login', request).then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((data) => {\r\n\t\t\t  console.log(data);\r\n              dispatch(loginSuccess(data));\r\n\t\t\t  history.push('/');\r\n            }).catch((error) => {\r\n              dispatch(loginFailed(`Server responded with status: ${error}`));\r\n            });\r\n        } else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t  dispatch(loginFailed(`Server responded with status: ${data.error}`));\r\n            }).catch((error) => {\r\n\t\t\t  dispatch(loginFailed(`Server responded with status: ${response.status}`));\r\n            });\r\n        }\r\n      }).catch((error) => {\r\n        dispatch(loginFailed(`Server responded with status: ${error}`));\r\n      });\r\n};\r\n\r\nexport const onLogout = (dispatch, token) => {\r\n\tlet request = {\r\n\t\tmethod: 'POST',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t\t};\r\n\t\t// dispatch(loading());\r\n\t\tfetch('/logout', request).then((response) => {\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t}).catch((error) => {\r\n\t\t\tdispatch(logoutFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n// Action Creators\r\n\r\n// export const loading = () => {\r\n//   return {\r\n//     type: LOADING,\r\n//   };\r\n// };\r\n\r\n// export const endLoading = () => {\r\n//   return {\r\n//     type: END_LOADING,\r\n//   };\r\n// };\r\n\r\nexport const loginSuccess = (data) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    data: data,\r\n  };\r\n};\r\n\r\nexport const loginFailed = (error) => {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logoutSuccess = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const logoutFailed = (error) => {\r\n  return {\r\n    type: LOGOUT_FAILED,\r\n  };\r\n};\r\n","import { LOGIN_SUCCESS,\r\n\tLOGIN_FAILED,\r\n\tLOGOUT_SUCCESS,\r\n\tLOGOUT_FAILED } from '../actions/loginActions';\r\n\r\nconst sessionString = 'loginstate';\r\nconst loadInitialState = () => {\r\n\tif ( sessionStorage.getItem (sessionString) ) \r\n\t{\r\n\t\tlet loginstate = JSON.parse(sessionStorage.getItem(sessionString));\r\n\t\tloginstate.error = \"\";\r\n\t\treturn loginstate;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn {\r\n\t\t\ttoken: '',\r\n\t\t\tuser: {},\r\n\t\t\tisLogged: false,\r\n\t\t\terror: '',\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const loginInit = loadInitialState ();\r\n\r\nexport const LoginReducer = (login, action) => {\r\n\tconsole.log('LoginReducer, action:', action);\r\n\tlet state = {};\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\tisLogged: true,\r\n\t\t\t\ttoken: action.data.token,\r\n\t\t\t\tuser: action.data.user,\r\n\t\t\t\terror: '',\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase LOGIN_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...login,\r\n\t\t\t\terror: action.error\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase LOGOUT_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\tisLogged: false,\r\n\t\t\t\ttoken: '',\r\n\t\t\t\tuser: {},\r\n\t\t\t\terror: ''\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase LOGOUT_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\tisLogged: false,\r\n\t\t\t\ttoken: '',\r\n\t\t\t\tuser: {},\r\n\t\t\t\terror: action.error\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn login;\r\n\t}\r\n\tsessionStorage.setItem(sessionString, JSON.stringify(state));\r\n\treturn state;\r\n}","//Action constants\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\r\n\r\n//Async Actions\r\nexport const onRegister = (dispatch, user) => {\r\n    let request = {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify(user),\r\n    };\r\n    // dispatch(loading());\r\n    fetch('/api/users', request).then((response) => {\r\n\t\t// dispatch(endLoading());\r\n        if (response.ok) {\r\n\t\t  dispatch(registerSuccess());\r\n        } else {\r\n          if (response.status === 409) {\r\n            dispatch(registerFailed('Register failed. Is username already in use?'));\r\n          } else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(registerFailed(`Server responded with status: ${data.error}`));\r\n            }).catch((error) => {\r\n\t\t\t  dispatch(registerFailed(`Server responded with status: ${response.status}`));\r\n            });\r\n          }\r\n        }\r\n\t}).catch((error) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tdispatch(registerFailed(`Server responded with status: ${error}`));\r\n\t});\r\n};\r\n// Action Creators\r\n\r\nexport const registerSuccess = () => {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const registerFailed = (error) => {\r\n  return {\r\n    type: REGISTER_FAILED,\r\n    error: error,\r\n  };\r\n};","import { REGISTER_SUCCESS,\r\n\tREGISTER_FAILED } from '../actions/registerActions';\r\n\r\nconst sessionString = 'registerstate';\r\nconst loadInitialState = () => {\r\n\tif ( sessionStorage.getItem (sessionString) ) \r\n\t{\r\n\t\tlet registerstate = JSON.parse(sessionStorage.getItem(sessionString));\r\n\t\tregisterstate.error = \"\";\r\n\t\tregisterstate.success = false;\r\n\t\treturn registerstate;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn {\r\n\t\t\terror: '',\r\n\t\t\tsuccess: false\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const registerInit = loadInitialState ();\r\n\r\nexport const RegisterReducer = (register, action) => {\r\n\tconsole.log('RegisterReducer, action:', action);\r\n\tlet state = {};\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase REGISTER_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...register,\r\n\t\t\t\terror: '',\r\n\t\t\t\tsuccess: true\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REGISTER_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...register,\r\n\t\t\t\terror: action.error,\r\n\t\t\t\tsuccess: false\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn register;\r\n\t}\r\n\tsessionStorage.setItem(sessionString, JSON.stringify(state));\r\n\treturn state;\r\n}","import { logoutSuccess } from './loginActions';\r\n\r\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\r\nexport const FETCH_CATEGORIES_FAILED = 'FETCH_CATEGORIES_FAILED';\r\nexport const FETCH_CATEGORY_SUCCESS = 'FETCH_CATEGORY_SUCCESS';\r\nexport const FETCH_CATEGORY_FAILED = 'FETCH_CATEGORY_FAILED';\r\nexport const FETCH_THREADS_SUCCESS = 'FETCH_THREADS_SUCCESS';\r\nexport const FETCH_THREADS_FAILED = 'FETCH_THREADS_FAILED';\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS';\r\nexport const ADD_CATEGORY_FAILED = 'ADD_CATEGORY_FAILED';\r\nexport const REMOVE_CATEGORY_SUCCESS = 'REMOVE_CATEGORY_SUCCESS';\r\nexport const REMOVE_CATEGORY_FAILED = 'REMOVE_CATEGORY_FAILED';\r\nexport const EDIT_CATEGORY_SUCCESS = 'EDIT_CATEGORY_SUCCESS';\r\nexport const EDIT_CATEGORY_FAILED = 'EDIT_CATEGORY_FAILED';\r\nexport const CLEAR_THREADS = 'CLEAR_THREADS';\r\n\r\n//ASync actions\r\n\r\nexport const getCategories = (dispatch, token) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = '/api/categories';\r\n\t// dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchCategoriesSuccess(data));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchCategoriesFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tdispatch(fetchCategoriesFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\t\tdispatch(logoutSuccess());\r\n\t\t\t} else {\r\n\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\tdispatch(fetchCategoriesFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\tdispatch(fetchCategoriesFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tdispatch(fetchCategoriesFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const getCategory = (dispatch, token, id, loadThreads = true) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = `/api/categories/${id}`;\r\n\t//\t dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t//\t dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchCategoryThreadsSuccess(data));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchCategoryThreadsFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tdispatch(fetchCategoryThreadsFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\t\tdispatch(logoutSuccess());\r\n\t\t\t} else {\r\n\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\tdispatch(fetchCategoryThreadsFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\tdispatch(fetchCategoryThreadsFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(fetchCategoryThreadsFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const getThreads = (dispatch, token, id, page) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = `/api/threads/pages?page=${page}&limit=5&category_id=${id}`;\r\n\t// dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t\t// dispatch(endLoading());\r\n\t\t\tif (response.ok) {\r\n\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\tdispatch(fetchThreadsSuccess(data));\r\n\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\tdispatch(fetchThreadsFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (response.status === 403) {\r\n\t\t\t\t\tdispatch(fetchThreadsFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\t\t\tdispatch(logoutSuccess());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\t\tdispatch(fetchThreadsFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\t\tdispatch(fetchThreadsFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t}).catch((error) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tdispatch(fetchThreadsFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n}\r\n\r\n//Action creators\r\n\r\nexport const clearCategories = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_THREADS\r\n\t};\r\n}\r\n\r\nexport const fetchCategoriesSuccess = (categories) => {\r\n\treturn {\r\n\t\ttype: FETCH_CATEGORIES_SUCCESS,\r\n\t\tcategories: categories,\r\n\t};\r\n};\r\n\r\nexport const fetchCategoriesFailed = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_CATEGORIES_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const fetchCategoryThreadsSuccess = (category) => {\r\n\treturn {\r\n\t\ttype: FETCH_CATEGORY_SUCCESS,\r\n\t\tcategory: category,\r\n\t};\r\n};\r\n\t\r\nexport const fetchCategoryThreadsFailed = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_CATEGORY_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const fetchThreadsSuccess = (threads) => {\r\n\treturn {\r\n\t\tthreads: threads,\r\n\t\ttype: FETCH_THREADS_SUCCESS\r\n\t};\r\n};\r\n\t\r\nexport const fetchThreadsFailed = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_THREADS_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const addCategorySuccess = () => {\r\n\treturn {\r\n\t\ttype: ADD_CATEGORY_SUCCESS,\r\n\t};\r\n};\r\n\r\nexport const addCategoryFailed = (error) => {\r\n\treturn {\r\n\t\ttype: ADD_CATEGORY_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const removeCategorySuccess = () => {\r\n\treturn {\r\n\t\ttype: REMOVE_CATEGORY_SUCCESS,\r\n\t};\r\n};\r\n\r\nexport const removeCategoryFailed = (error) => {\r\n\treturn {\r\n\t\ttype: REMOVE_CATEGORY_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const editCategorySuccess = () => {\r\n\treturn {\r\n\t\ttype: EDIT_CATEGORY_SUCCESS,\r\n\t};\r\n};\r\n\r\nexport const editCategoryFailed = (error) => {\r\n\treturn {\r\n\t\ttype: EDIT_CATEGORY_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};","import { FETCH_CATEGORIES_SUCCESS,\r\n\tFETCH_CATEGORIES_FAILED,\r\n\tFETCH_CATEGORY_SUCCESS,\r\n\tFETCH_CATEGORY_FAILED,\r\n\tFETCH_THREADS_SUCCESS,\r\n\tFETCH_THREADS_FAILED,\r\n\tADD_CATEGORY_SUCCESS,\r\n\tADD_CATEGORY_FAILED,\r\n\tREMOVE_CATEGORY_SUCCESS,\r\n\tREMOVE_CATEGORY_FAILED,\r\n\tEDIT_CATEGORY_SUCCESS,\r\n\tEDIT_CATEGORY_FAILED,\r\n\tCLEAR_THREADS } from '../actions/categoryActions';\r\n\r\nconst sessionString = 'categorystate';\r\nconst loadInitialState = () => {\r\n\tif ( sessionStorage.getItem (sessionString) ) \r\n\t{\r\n\t\tlet categorystate = JSON.parse(sessionStorage.getItem(sessionString));\r\n\t\tcategorystate.error = \"\";\r\n\t\treturn categorystate;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn {\r\n\t\t\tthreads: null,\r\n\t\t\tcategory: null,\r\n\t\t\tcategories: [],\r\n\t\t\terror: '',\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const categoryInit = loadInitialState ();\r\n\r\nexport const CategoryReducer = (category, action) => {\r\n\tconsole.log('CategoryReducer, action:', action);\r\n\tlet state = {};\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_CATEGORIES_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tcategories: action.categories,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_CATEGORIES_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_CATEGORY_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tcategory: action.category,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_CATEGORY_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_THREADS_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tthreads: action.threads,\r\n\t\t\t\terror: '',\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase FETCH_THREADS_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase ADD_CATEGORY_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase ADD_CATEGORY_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_CATEGORY_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_CATEGORY_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase EDIT_CATEGORY_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase EDIT_CATEGORY_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase CLEAR_THREADS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tthreads: null,\r\n\t\t\t\terror: ''\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn category;\r\n\t}\r\n\tsessionStorage.setItem(sessionString, JSON.stringify(state));\r\n\treturn state;\r\n}","import { LoginReducer, loginInit } from './loginReducer';\r\nimport { RegisterReducer, registerInit } from './registerReducer';\r\nimport { CategoryReducer, categoryInit } from './categoryReducer';\r\n\r\nconst loadInitialState = () => {\r\n\treturn {\r\n\t\tlogin: loginInit,\r\n\t\tregister: registerInit,\r\n\t\tcategory: categoryInit\r\n\t};\r\n}\r\n\r\nexport const initialState = loadInitialState ();\r\n  \r\nexport const MainReducer = ({login, register, category}, action) => {\r\n\treturn {\r\n\t\tlogin: LoginReducer ( login, action ),\r\n\t\tregister: RegisterReducer ( register, action ),\r\n\t\tcategory: CategoryReducer ( category, action)\r\n\t};\r\n};","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const TText = ({v, g, p, c, children}) => {\r\n\tif ( !c )\r\n\t\tc = \"p\";\r\n\tif ( !v )\r\n\t\tv = \"body2\";\r\n\r\n\treturn (\r\n\t\t<Typography variant={v} gutterBottom={g} paragraph={p} component={c}>{children}</Typography>\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, TextField, Button, Paper, Tabs, Tab, Box } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nimport { onRegister } from '../actions/registerActions';\r\nimport { onLogin } from '../actions/loginActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport { TText } from './TText';\r\n\r\nfunction TabPanel(props) {\r\n\tconst { children, value, index } = props;\r\n  \r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}>\r\n\t\t\t{value === index && (\r\n\t\t\t\t<Box p={3}>\r\n\t\t\t\t\t<TText c=\"span\">{children}</TText>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'z-index': '1000',\r\n  \t\tposition: 'absolute',\r\n\t\twidth: '400px',\r\n\t\theight: '450px',\r\n\t\tpadding: '20px',\r\n\t\t\"align-items\": 'center',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\t'margin-top': '-225px',\r\n\t\t'margin-left': '-200px'\r\n\t},\r\n\tbox: {\r\n\t\theight: \"450px\"\r\n\t},\r\n\ttabs: {\r\n\t\theight: \"50px\"\r\n\t},\r\n\tcontent: {\r\n\t\theight: \"400px\",\r\n\t\t\"overflow-y\": \"auto\"\r\n\t},\r\n\tinput: {\r\n\t\tpaddingBottom: '10px',\r\n\t\t\"text-align\": 'left'\r\n\t},\r\n\talert: {\r\n\t\t\"text-align\": 'left'\r\n\t}\r\n}));\r\n\r\nconst Login = (props) => {\r\n\tconst [{login, register}, dispatch] = useStateValue();\r\n\tuseEffect(() => {\r\n\t\tif (login.isLogged)\r\n\t\t\tprops.closeLoginBar();\r\n\t}, [login.isLogged]);\r\n\tconst [tab, setTab] = useState(0);\r\n\tuseEffect(() => {\r\n\t\tsetTab(props.tab);\r\n\t}, [props.tab]);\r\n\tconst [loginForm, setloginForm] = useState({\r\n\t\tusername:\"\",\r\n\t\tpassword:\"\",\r\n\t\tnickname:\"\"\r\n\t});\r\n\r\n\tconst handleChange = (event, newValue) => {\r\n\t\tprops.openCloseLoginBar (newValue);\r\n\t\tsetTab(newValue);\r\n\t};\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetloginForm({\r\n\t\t\t...loginForm,\r\n\t\t\t[event.target.name]:event.target.value\r\n\t\t})\r\n\t};\r\n\t\r\n\tconst onLoginSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet user = {\r\n\t\t\temail: loginForm.username,\r\n\t\t\tpassword: loginForm.password\r\n\t\t}\r\n\t\tonLogin(dispatch, user, props.history);\r\n\t};\r\n\r\n\tconst onRegisterSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet user = {\r\n\t\t\temail: loginForm.username,\r\n\t\t\tpassword: loginForm.password,\r\n\t\t\tnickname: loginForm.nickname\r\n\t\t}\r\n\t\tonRegister(dispatch, user, props.history);\r\n\t};\r\n\r\n\t// const isLoading = .props.loading && <Spinner />;\r\n\tconst classes = useStyles();\r\n\r\n\tconst loginFail = login.error.length > 0 && (<React.Fragment>\r\n\t\t<Alert severity=\"error\" className={classes.alert}>\r\n\t\t\t<AlertTitle>Login was unsuccessful</AlertTitle>\r\n\t\t\t{login.error}\r\n\t\t</Alert>\r\n\t\t<br/>\r\n\t</React.Fragment>);\r\n\tconst registerSuccess = register.success && (<React.Fragment>\r\n\t\t<Alert severity=\"success\" className={classes.alert}>\r\n\t\t\tRegistration was successful, you may now login.\r\n\t\t</Alert>\r\n\t\t<br/>\r\n\t</React.Fragment>);\r\n\tconst registerFail = register.error.length > 0 && (<React.Fragment>\r\n\t\t<Alert severity=\"error\" className={classes.alert}>\r\n\t\t\t<AlertTitle>Registration was unsuccessful</AlertTitle>\r\n\t\t\t{register.error}\r\n\t\t</Alert>\r\n\t\t<br/>\r\n\t</React.Fragment>);\r\n\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<Paper elevation={2} className={classes.box}>\r\n\t\t\t\t\t<Tabs indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" value={tab} onChange={handleChange} className={classes.tabs}>\r\n\t\t\t\t\t\t<Tab label=\"Register\" id='0'/>\r\n\t\t\t\t\t\t<Tab label=\"Login\" id='1'/>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t<center className={classes.content}>\r\n\t\t\t\t\t\t<TabPanel value={tab} index={0}>\r\n\t\t\t\t\t\t\t{registerSuccess || registerFail}\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Email\" name=\"username\" type=\"email\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Nickname\" name=\"nickname\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Password\" name=\"password\" type=\"password\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={onRegisterSubmit}>Register</Button>\r\n\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t<TabPanel value={tab} index={1}>\r\n\t\t\t\t\t\t\t{loginFail}\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Email\" name=\"username\" type=\"email\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Password\" name=\"password\" type=\"password\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={onLoginSubmit}>Log In</Button>\r\n\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t</center>\r\n\t\t\t\t</Paper>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Login);","import React, {useState} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, Toolbar, AppBar, ButtonGroup, Button } from '@material-ui/core';\r\n\r\nimport Login from './Login';\r\nimport { onLogout } from '../actions/loginActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport { TText } from './TText';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttoolbar: {\r\n\t\tbackgroundColor: `white`,\r\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\r\n\t\tposition: 'fixed',\r\n\t\twidth: `auto`,\r\n\t\tleft:`40px`,\r\n\t\tright:`40px`,\r\n\t},\r\n\tButtonGroup: {\r\n\t\t'position': 'absolute', \r\n\t\t'right': '0px'\r\n\t}\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n\tconst [{login}, dispatch] = useStateValue();\r\n\r\n\tconst [loginBar, setLoginBar] = useState({\r\n\t\tshowLoginBar: false,\r\n\t\ttab: 1\r\n\t});\r\n\r\n\tconst onClickImage = (event, dest) => {\r\n\t\tevent.preventDefault();\r\n\t\tcloseLoginBar();\r\n\t\tprops.history.push(dest);\r\n\t}\r\n\r\n\tconst openCloseLoginBar = (tab) => {\r\n\t\tif(tab !== loginBar.tab)\r\n\t\t{\r\n\t\t\tsetLoginBar({showLoginBar: true, tab:tab});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tsetLoginBar({showLoginBar: !loginBar.showLoginBar, tab:tab});\r\n\t}\r\n\r\n\tconst closeLoginBar = () => {\r\n\t\tsetLoginBar({showLoginBar: false, tab:0});\r\n\t}\r\n\r\n\tconst buttonGroup = () => {\r\n\t\tif (login.isLogged)\r\n\t\t{\r\n\t\t\treturn (\r\n\t\t\t\t<ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\" className={classes.ButtonGroup}>\r\n\t\t\t\t\t<Button onClick={() => props.history.push('/')}>Welcome {login.user.nickname}</Button>\r\n\t\t\t\t\t<Button onClick={() => {onLogout(dispatch, login.token)}}>Logout</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\" className={classes.ButtonGroup}>\r\n\t\t\t\t<Button onClick={() => openCloseLoginBar(0)}>Register</Button>\r\n\t\t\t\t<Button onClick={() => openCloseLoginBar(1)}>Login</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t);\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Toolbar variant=\"dense\" className={classes.toolbar}>\r\n\t\t\t\t<a href=\"/\" onClick={(e) => onClickImage (e, \"/\")}><img src={process.env.PUBLIC_URL + '/TF_logo.gif'} /></a>\r\n\t\t\t\t{buttonGroup()}\r\n\t\t\t</Toolbar>\r\n\t\t\t{loginBar.showLoginBar && <Login tab={loginBar.tab} openCloseLoginBar={openCloseLoginBar} closeLoginBar={closeLoginBar}/>}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(NavBar);","import React from 'react';\r\nimport { makeStyles, withStyles, TableRow, TableCell } from '@material-ui/core';\r\n\r\nimport { TText } from './TText';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n\thead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: 14,\r\n\t},\r\n}))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t\"text-decoration\": \"none\", \r\n\t\t\"color\": \"inherit\"\r\n\t}\r\n}));\r\n\r\nexport const CategoryRow = (props) => {\r\n\tconst { categoryName, threads, id, description } = props.item;\r\n\tconst classes = useStyles();\r\n    return (\r\n\t\t<StyledTableRow>\r\n\t\t\t<StyledTableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t<TText v=\"h6\"><a className={classes.root} href={`/c/${id}`} onClick={props.onClick}>{categoryName}</a></TText>\r\n\t\t\t\t{description}\r\n\t\t\t</StyledTableCell>\r\n\t\t\t<StyledTableCell size=\"small\" align=\"center\">\r\n\t\t\t\t{threads ? threads.length : 0}\r\n\t\t\t</StyledTableCell>\r\n\t\t\t<StyledTableCell>\r\n\t\t\t\t-\r\n\t\t\t</StyledTableCell>\r\n\t\t</StyledTableRow>\r\n\t);\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, Paper, TableContainer, Table, TableBody, TableRow, TableHead, TableCell } from '@material-ui/core';\r\n\r\nimport { CategoryRow } from './CategoryRow';\r\n// import Spinner from './Spinner';\r\nimport { getCategories } from '../actions/categoryActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\n\r\nconst ListAllCategories = (props) => {\r\n\tconst [{login, category}, dispatch] = useStateValue();\r\n\tuseEffect(() => {\r\n\t\tgetCategories(dispatch, login.token);\r\n\t}, []);\r\n\r\n\tconst onClick = (event) => {\r\n\t\t// event.nativeEvent.stopImmediatePropagation();\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.push(event.target.getAttribute(\"href\"));\r\n\t};\r\n\r\n\tconsole.log(\"did this rerender?\");\r\n\tconst categories = category.categories.map((category) => {\r\n\t\treturn <CategoryRow key={category.id} item={category} onClick={onClick} />;\r\n\t});\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table aria-label=\"simple table\">\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell>Category</TableCell>\r\n\t\t\t\t\t\t\t<TableCell size=\"small\" align=\"center\">Threads</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Latests</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{categories}\r\n\t\t\t\t\t\t{/* <TableCell>Test</TableCell>\r\n\t\t\t\t\t\t<TableCell size=\"small\" align=\"center\">1</TableCell>\r\n\t\t\t\t\t\t<TableCell>jotain</TableCell> */}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(ListAllCategories);\r\n\r\n// class ListAllCategories extends React.Component {\r\n  \r\n//   componentDidMount (){\r\n//     this.props.dispatch(getCategories(this.props.token));\r\n//   }\r\n\r\n//   onClick = (event) => {\r\n// \t// event.nativeEvent.stopImmediatePropagation();\r\n// \tevent.preventDefault();\r\n// \tthis.props.history.push(event.target.getAttribute(\"href\"));\r\n//   };\r\n  \r\n//   render() {\r\n// \tconst isLoading = this.props.loading && <Spinner />;\r\n// \tlet categories = this.props.categories.map((category) => {\r\n// \t\treturn <CategoryRow key={category.id} item={category} onClick={this.onClick} />;\r\n// \t});\r\n//     return (\r\n//       <div>\r\n//         {isLoading}\r\n//         <Table basic='very' striped>\r\n//           <Table.Header>\r\n//             <Table.Row>\r\n//               <Table.HeaderCell>Category</Table.HeaderCell>\r\n// \t\t\t  <Table.HeaderCell collapsing>Threads</Table.HeaderCell>\r\n//               <Table.HeaderCell textAlign='right'>Latests</Table.HeaderCell>\r\n//             </Table.Row>\r\n//           </Table.Header>\r\n// \t\t  <Table.Body>{categories}</Table.Body>\r\n//         </Table>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     loading: state.login.loading,\r\n//     token: state.login.token,\r\n// \tcategories: state.category.categories\r\n//   };\r\n// };","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport { useStateValue } from './utils/StateProvider';\r\nimport NavBar from './components/NavBar';\r\nimport ListAllCategories from './components/ListAllCategories';\r\n\r\nconst App = ({ history, match }) => {\r\n\tconst [{login}] = useStateValue();\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<NavBar/>\r\n\t\t\t<Container maxWidth=\"md\" style={{ 'paddingTop': '100px' }}>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route render={() => <ListAllCategories/>} />\r\n\t\t\t\t</Switch>\r\n\t\t\t{/* <Container style={{ 'paddingTop': '100px' }}>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/users/' render={() => <ListAllUsers />} />\r\n\t\t\t\t<Route exact path='/register/'render={() => (isLogged ? <Redirect to='/' /> : <Registration history={history} />)}/>\r\n\t\t\t\t<Route exact path='/login/' render={() => (isLogged ? <Redirect to='/' /> : <Login history={history} />)} />\r\n\t\t\t\t<Route exact path='/c/:id' render={({match}) => <ViewCategory id={match.params.id} history={history} />} />\r\n\t\t\t\t<Route exact path='/c/:id/page-:page' render={({match}) => <ViewCategory id={match.params.id} page={match.params.page} history={history} />} />\r\n\t\t\t\t<Route exact path='/c/:id/new-thread' render={({match}) => <NewThread id={match.params.id} history={history} />} />\r\n\t\t\t\t<Route exact path='/t/:id' render={({match}) => <ViewThread id={match.params.id} history={history} />} />\r\n\t\t\t\t<Route exact path='/t/:id/page-:page' render={({match}) => <ViewThread id={match.params.id} page={match.params.page} history={history} />} />\r\n\t\t\t\t<Route exact path='/t/:id/edit-thread' render={({match}) => <EditThread id={match.params.id} history={history} />} />\r\n\t\t\t\t<Route exact path='/t/:id/new-comment' render={({match}) => <NewComment id={match.params.id} history={history} />} />\r\n\t\t\t\t<Route exact path='/t/:id/edit-comment/:comment_id' render={({match}) => <EditComment id={match.params.id} comment_id={match.params.comment_id} history={history} />} />\r\n\t\t\t\t<Route render={() => <ListAllCategories history={history} />} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Container> */}\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\n// {/* <Route exact path='/user/:name' render={(props) => <GetUser name={match.params.name} />} /> */}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { StateProvider } from './utils/StateProvider';\r\nimport { initialState, MainReducer } from './reducers/reducers';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n\t\t<StateProvider initialState={initialState} reducer={MainReducer}>\r\n\t\t\t<App />\r\n\t\t</StateProvider>\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// if ('serviceWorker' in navigator) {\r\n//   navigator.serviceWorker\r\n//     .register('/serviceWorker.js')\r\n//     .then(function () {\r\n//       console.log('Service worker registered!');\r\n//     })\r\n//     .catch(function (err) {\r\n//       console.log(err);\r\n//     });\r\n// }\r\n"],"sourceRoot":""}