{"version":3,"sources":["utils/StateProvider.js","actions/loginActions.js","reducers/loginReducer.js","reducers/index.js","components/NavBar.js","components/Login.js","App.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","loginSuccess","data","type","loginFailed","error","logoutSuccess","logoutFailed","loginInit","token","user","isLogged","LoginReducer","login","action","console","log","loading","sessionStorage","getItem","mainstate","JSON","parse","loadInitialState","useStyles","makeStyles","theme","toolbar","backgroundColor","borderBottom","palette","divider","position","width","left","right","ButtonGroup","withRouter","props","dispatch","classes","Toolbar","variant","className","src","color","aria-label","Button","onClick","history","push","nickname","request","method","mode","headers","Authorization","fetch","then","response","catch","onLogout","root","padding","input","paddingBottom","alert","useState","username","password","loginForm","setloginForm","onChange","event","target","name","fail","length","Fragment","Alert","severity","AlertTitle","Paper","elevation","TextField","label","required","preventDefault","email","body","stringify","ok","json","status","onLogin","match","Container","maxWidth","style","exact","path","render","to","ReactDOM","StrictMode","newState","setItem","document","getElementById"],"mappings":"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","file":"static/js/main.070256d2.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from 'react';\r\nexport const StateContext = createContext();\r\nexport const StateProvider = ({reducer, initialState, children}) =>(\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);","// import { clearContactReducerState, getContacts } from './contactActions';\r\n\r\n//Action constants\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS',\r\n\tLOGIN_FAILED = 'LOGIN_FAILED',\r\n\tLOGOUT_SUCCESS = 'LOGOUT_SUCCESS',\r\n\tLOGOUT_FAILED = 'LOGOUT_FAILED';\r\n\r\n//Async Actions\r\n\r\nexport const onLogin = (dispatch, user, history) => {\r\n    let request = {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify(user),\r\n    };\r\n    // dispatch(loading());\r\n    fetch('/api/users/login', request).then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((data) => {\r\n\t\t\t  console.log(data);\r\n              dispatch(loginSuccess(data));\r\n\t\t\t  history.push('/');\r\n            }).catch((error) => {\r\n              dispatch(loginFailed(`Server responded with status: ${error}`));\r\n            });\r\n        } else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t  dispatch(loginFailed(`Server responded with status: ${data.error}`));\r\n            }).catch((error) => {\r\n\t\t\t  dispatch(loginFailed(`Server responded with status: ${response.status}`));\r\n            });\r\n        }\r\n      }).catch((error) => {\r\n        dispatch(loginFailed(`Server responded with status: ${error}`));\r\n      });\r\n};\r\n\r\nexport const onLogout = (dispatch, token) => {\r\n\tlet request = {\r\n\t\tmethod: 'POST',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t\t};\r\n\t\t// dispatch(loading());\r\n\t\tfetch('/logout', request).then((response) => {\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t}).catch((error) => {\r\n\t\t\tdispatch(logoutFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n// Action Creators\r\n\r\n// export const loading = () => {\r\n//   return {\r\n//     type: LOADING,\r\n//   };\r\n// };\r\n\r\n// export const endLoading = () => {\r\n//   return {\r\n//     type: END_LOADING,\r\n//   };\r\n// };\r\n\r\nexport const loginSuccess = (data) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    data: data,\r\n  };\r\n};\r\n\r\nexport const loginFailed = (error) => {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logoutSuccess = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const logoutFailed = (error) => {\r\n  return {\r\n    type: LOGOUT_FAILED,\r\n  };\r\n};\r\n","import { LOGIN_SUCCESS,\r\n\tLOGIN_FAILED,\r\n\tLOGOUT_SUCCESS,\r\n\tLOGOUT_FAILED } from '../actions/loginActions';\r\n\r\nexport const loginInit = {\r\n\ttoken: '',\r\n\tuser: {},\r\n\tisLogged: false,\r\n\terror: '',\r\n};\r\n\r\nexport const LoginReducer = (login, action) => {\r\n\tconsole.log('LoginReducer, action:', action);\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tisLogged: true,\r\n\t\t\t\ttoken: action.data.token,\r\n\t\t\t\tuser: action.data.user,\r\n\t\t\t\terror: '',\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase LOGIN_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...login,\r\n\t\t\t\terror: action.error\r\n\t\t\t};\r\n\t\tcase LOGOUT_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\tisLogged: false,\r\n\t\t\t\ttoken: '',\r\n\t\t\t\tuser: {},\r\n\t\t\t\terror: ''\r\n\t\t\t};\r\n\t\tcase LOGOUT_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\tisLogged: false,\r\n\t\t\t\ttoken: '',\r\n\t\t\t\tuser: {},\r\n\t\t\t\terror: action.error\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn login;\r\n\t}\r\n}\r\n\r\n// const endLoading = (login) =>\r\n// {\r\n// \treturn {\r\n// \t\t...LoginReducer(login, {type: LOADING})\r\n// \t}\r\n// }","import { LoginReducer, loginInit } from '../reducers/loginReducer';\r\n\r\nconst loadInitialState = () => {\r\n\tif ( sessionStorage.getItem ('mainstate') ) \r\n\t{\r\n\t\tlet mainstate = JSON.parse(sessionStorage.getItem('mainstate'));\r\n\t\tmainstate.login.error = \"\";\r\n\t\treturn mainstate;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn {\r\n\t\t\tlogin: loginInit\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const initialState = loadInitialState ();\r\n  \r\nexport const MainReducer = ({login}, action) => {\r\n\tlet newState = ({\r\n\t\tlogin: LoginReducer (login, action )\r\n\t});\r\n\tsessionStorage.setItem('mainstate', JSON.stringify(newState));\r\n\treturn newState;\r\n};","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, Toolbar, AppBar, ButtonGroup, Button } from '@material-ui/core';\r\n\r\nimport { onLogout } from '../actions/loginActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport { TText } from './TText';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttoolbar: {\r\n\t\tbackgroundColor: `white`,\r\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\r\n\t\tposition: 'fixed',\r\n\t\twidth: `auto`,\r\n\t\tleft:`40px`,\r\n\t\tright:`40px`,\r\n\t},\r\n\tButtonGroup: {\r\n\t\t'position': 'absolute', \r\n\t\t'right': '0px'\r\n\t}\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n\tconst [{login}, dispatch] = useStateValue();\r\n\r\n\tconst loginBar = () => {\r\n\t\treturn (\r\n\t\t\t<ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\" className={classes.ButtonGroup}>\r\n\t\t\t\t<Button onClick={() => props.history.push('/register')}>Register</Button>\r\n\t\t\t\t<Button onClick={() => props.history.push('/login')}>Login</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t);\r\n\t}\r\n\r\n\tconst loggedInBar = () => {\r\n\t\treturn (\r\n\t\t\t<ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\" className={classes.ButtonGroup}>\r\n\t\t\t\t<Button onClick={() => props.history.push('/')}>Welcome {login.user.nickname}</Button>\r\n\t\t\t\t<Button onClick={() => {onLogout(dispatch, login.token)}}>Logout</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t);\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<Toolbar variant=\"dense\" className={classes.toolbar}>\r\n\t\t\t<img src={process.env.PUBLIC_URL + '/TF_logo.gif'} />\r\n\t\t\t{login.isLogged ? loggedInBar() : loginBar()}\r\n\t\t</Toolbar>\r\n\t);\r\n}\r\n\r\nexport default withRouter(NavBar);","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, TextField, Button, Paper } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nimport { onLogin } from '../actions/loginActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: 'fit-content',\r\n\t\tpadding: '20px',\r\n\t\t\"align-items\": 'center'\r\n\t},\r\n\tinput: {\r\n\t\tpaddingBottom: '10px',\r\n\t\t\"text-align\": 'left'\r\n\t},\r\n\talert: {\r\n\t\t\"text-align\": 'left'\r\n\t}\r\n}));\r\n\r\nconst Login = (props) => {\r\n\tconst [{login}, dispatch] = useStateValue();\r\n\tconst [loginForm, setloginForm] = useState({\r\n\t\tusername:\"\",\r\n\t\tpassword:\"\"\r\n\t});\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetloginForm({\r\n\t\t\t...loginForm,\r\n\t\t\t[event.target.name]:event.target.value\r\n\t\t})\r\n\t};\r\n\t\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tlet user = {\r\n\t\t\temail: loginForm.username,\r\n\t\t\tpassword: loginForm.password\r\n\t\t}\r\n\t\r\n\t\tonLogin(dispatch, user, props.history);\r\n\t};\r\n\r\n\t// const isLoading = .props.loading && <Spinner />;\r\n\tconst classes = useStyles();\r\n\tconst fail = login.error.length > 0 && (<React.Fragment>\r\n\t\t\t<Alert severity=\"error\" className={classes.alert}>\r\n\t\t\t\t<AlertTitle>Login was unsuccessful</AlertTitle>\r\n\t\t\t\t{login.error}\r\n\t\t\t</Alert>\r\n\t\t\t<br/>\r\n\t\t</React.Fragment>);\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<center>\r\n\t\t\t\t<Paper elevation={1} className={classes.root}>\r\n\t\t\t\t\t{fail}\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<TextField label=\"Email\" name=\"username\" type=\"email\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<TextField label=\"Password\" name=\"password\" type=\"password\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<Button variant=\"contained\" onClick={onSubmit}>Log In</Button>\r\n\t\t\t\t</Paper>\r\n\t\t\t</center>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport { useStateValue } from './utils/StateProvider';\r\nimport NavBar from './components/NavBar';\r\nimport Login from './components/Login';\r\n\r\nconst App = ({ history, match }) => {\r\n\tconst [{login}] = useStateValue();\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t<NavBar/>\r\n\t\t<Container maxWidth=\"md\" style={{ 'paddingTop': '100px' }}>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/login/' render={() => (login.isLogged ? <Redirect to='/' /> : <Login/>)} />\r\n\t\t\t\t{/* <Route render={() => <ListAllCategories history={history} />} /> */}\r\n\t\t\t</Switch>\r\n\t\t{/* <Container style={{ 'paddingTop': '100px' }}>\r\n\t\t\t<Switch>\r\n\t\t\t<Route exact path='/users/' render={() => <ListAllUsers />} />\r\n\t\t\t<Route exact path='/register/'render={() => (isLogged ? <Redirect to='/' /> : <Registration history={history} />)}/>\r\n\t\t\t<Route exact path='/login/' render={() => (isLogged ? <Redirect to='/' /> : <Login history={history} />)} />\r\n\t\t\t<Route exact path='/c/:id' render={({match}) => <ViewCategory id={match.params.id} history={history} />} />\r\n\t\t\t<Route exact path='/c/:id/page-:page' render={({match}) => <ViewCategory id={match.params.id} page={match.params.page} history={history} />} />\r\n\t\t\t<Route exact path='/c/:id/new-thread' render={({match}) => <NewThread id={match.params.id} history={history} />} />\r\n\t\t\t<Route exact path='/t/:id' render={({match}) => <ViewThread id={match.params.id} history={history} />} />\r\n\t\t\t<Route exact path='/t/:id/page-:page' render={({match}) => <ViewThread id={match.params.id} page={match.params.page} history={history} />} />\r\n\t\t\t<Route exact path='/t/:id/edit-thread' render={({match}) => <EditThread id={match.params.id} history={history} />} />\r\n\t\t\t<Route exact path='/t/:id/new-comment' render={({match}) => <NewComment id={match.params.id} history={history} />} />\r\n\t\t\t<Route exact path='/t/:id/edit-comment/:comment_id' render={({match}) => <EditComment id={match.params.id} comment_id={match.params.comment_id} history={history} />} />\r\n\t\t\t<Route render={() => <ListAllCategories history={history} />} />\r\n\t\t\t</Switch>\r\n\t\t</Container> */}\r\n\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\n// {/* <Route exact path='/user/:name' render={(props) => <GetUser name={match.params.name} />} /> */}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { StateProvider } from './utils/StateProvider';\r\nimport { initialState, MainReducer } from './reducers/index';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n\t\t<StateProvider initialState={initialState} reducer={MainReducer}>\r\n\t\t\t<App />\r\n\t\t</StateProvider>\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// if ('serviceWorker' in navigator) {\r\n//   navigator.serviceWorker\r\n//     .register('/serviceWorker.js')\r\n//     .then(function () {\r\n//       console.log('Service worker registered!');\r\n//     })\r\n//     .catch(function (err) {\r\n//       console.log(err);\r\n//     });\r\n// }\r\n"],"sourceRoot":""}