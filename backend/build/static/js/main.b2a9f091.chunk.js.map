{"version":3,"sources":["utils/StateProvider.js","actions/loginActions.js","reducers/loginReducer.js","actions/registerActions.js","reducers/registerReducer.js","actions/categoryActions.js","reducers/categoryReducer.js","actions/threadActions.js","reducers/threadReducer.js","reducers/reducers.js","components/TText.js","components/Login.js","components/NavBar.js","components/CategoryRow.js","components/ListAllCategories.js","components/ThreadRow.js","components/ViewCategory.js","components/CommentRow.js","components/ViewThread.js","components/ThreadForm.js","components/NewThread.js","components/EditThread.js","components/CommentForm.js","components/NewComment.js","components/EditComment.js","App.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","loginSuccess","data","type","loginFailed","error","logoutSuccess","logoutFailed","loginInit","sessionStorage","getItem","loginstate","JSON","parse","token","user","isLogged","loadInitialState","LoginReducer","login","action","console","log","state","loading","setItem","stringify","registerSuccess","registerFailed","registerInit","registerstate","success","RegisterReducer","register","getCategory","dispatch","id","request","method","mode","headers","Authorization","url","fetch","then","response","ok","json","fetchCategorySuccess","catch","fetchCategoryFailed","status","getThreads","page","fetchThreadsSuccess","fetchThreadsFailed","getLatestThreads","fetchLatestThreadsSuccess","threads","docs","fetchLatestThreadsFailed","fetchCategoriesSuccess","categories","fetchCategoriesFailed","category","categoryInit","categorystate","CategoryReducer","categoryIndex","findIndex","latest","getThread","fetchCategory","fetchThreadSuccess","category_id","fetchThreadFailed","getComments","fetchCommentsSuccess","fetchCommentsFailed","thread","fetchCommentSuccess","comment","fetchCommentFailed","comments","addThreadSuccess","addThreadFailed","editThreadSuccess","editThreadFailed","addCommentSuccess","addCommentFailed","editCommentSuccess","editCommentFailed","threadInit","threadstate","ThreadReducer","TText","v","g","p","c","color","Typography","variant","gutterBottom","paragraph","component","TabPanel","props","index","role","hidden","Box","useStyles","makeStyles","theme","root","position","width","height","padding","top","left","box","tabs","content","input","paddingBottom","alert","withRouter","useEffect","closeLoginBar","useState","tab","setTab","username","password","nickname","loginForm","setloginForm","onChange","event","target","name","classes","loginFail","length","Fragment","Alert","severity","className","AlertTitle","registerFail","Paper","elevation","Tabs","indicatorColor","textColor","newValue","openCloseLoginBar","Tab","label","onSubmit","onRegisterSubmit","TextField","required","Button","onClick","preventDefault","email","body","onRegister","history","onLoginSubmit","push","onLogin","toolbar","backgroundColor","borderBottom","palette","divider","right","ButtonGroup","showLoginBar","loginBar","setLoginBar","Toolbar","href","e","dest","src","aria-label","onLogout","StyledTableCell","withStyles","head","common","black","white","fontSize","verticalAlign","TableCell","StyledTableRow","hover","TableRow","categoryLink","threadLink","maxWidth","overflow","textOverflow","threadCount","CategoryRow","item","categoryName","description","latestThreads","map","key","threadName","user_id","author","lastModified","scope","align","i","getCategories","getAttribute","TableContainer","Table","size","TableHead","style","TableBody","tableCellCollapse","ThreadRow","date","onClickThread","onClickUser","header","paddingTop","bottomHeader","bottomButtonHeader","textAlign","setPage","parseInt","pagination","Pagination","shape","count","pages","replace","disableElevation","endIcon","disabled","marginBottom","WebkitBoxShadow","boxShadow","card","tableCell","paddingRight","tableCellContent","borderLeft","paddingLeft","whiteSpace","tableCellBar","opacity","tableCellBarButton","thread_id","isThread","tUrl","editAndRemove","userType","onClickCommentModify","Card","CardHeader","avatar","Avatar","title","headerTitle","headerDescription","onClickBreadcrum","categoryLoaded","categoryID","threadComment","paper","marginTop","border","textField","ThreadForm","form","titleFail","commentFail","editThread","multiline","rows","setForm","errors","newThread","threadLoaded","loadingthread","t","CommentForm","newComment","commentLoaded","stateUpdate","getComment","comment_id","editComment","match","Container","exact","path","render","params","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2a9f091.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from 'react';\r\nexport const StateContext = createContext();\r\nexport const StateProvider = ({reducer, initialState, children}) =>(\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);","// import { clearContactReducerState, getContacts } from './contactActions';\r\n\r\n//Action constants\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS',\r\n\tLOGIN_FAILED = 'LOGIN_FAILED',\r\n\tLOGOUT_SUCCESS = 'LOGOUT_SUCCESS',\r\n\tLOGOUT_FAILED = 'LOGOUT_FAILED';\r\n\r\n//Async Actions\r\n\r\nexport const onLogin = (dispatch, user, history) => {\r\n    let request = {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify(user),\r\n    };\r\n    // dispatch(loading());\r\n    fetch('/api/users/login', request).then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((data) => {\r\n\t\t\t  console.log(data);\r\n              dispatch(loginSuccess(data));\r\n\t\t\t  history.push('/');\r\n            }).catch((error) => {\r\n              dispatch(loginFailed(`Server responded with status: ${error}`));\r\n            });\r\n        } else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t  dispatch(loginFailed(`Server responded with status: ${data.error}`));\r\n            }).catch((error) => {\r\n\t\t\t  dispatch(loginFailed(`Server responded with status: ${response.status}`));\r\n            });\r\n        }\r\n      }).catch((error) => {\r\n        dispatch(loginFailed(`Server responded with status: ${error}`));\r\n      });\r\n};\r\n\r\nexport const onLogout = (dispatch, token) => {\r\n\tlet request = {\r\n\t\tmethod: 'POST',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t\t};\r\n\t\t// dispatch(loading());\r\n\t\tfetch('/logout', request).then((response) => {\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t}).catch((error) => {\r\n\t\t\tdispatch(logoutFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n// Action Creators\r\n\r\n// export const loading = () => {\r\n//   return {\r\n//     type: LOADING,\r\n//   };\r\n// };\r\n\r\n// export const endLoading = () => {\r\n//   return {\r\n//     type: END_LOADING,\r\n//   };\r\n// };\r\n\r\nexport const loginSuccess = (data) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    data: data,\r\n  };\r\n};\r\n\r\nexport const loginFailed = (error) => {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logoutSuccess = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const logoutFailed = (error) => {\r\n  return {\r\n    type: LOGOUT_FAILED,\r\n  };\r\n};\r\n","import { LOGIN_SUCCESS,\r\n\tLOGIN_FAILED,\r\n\tLOGOUT_SUCCESS,\r\n\tLOGOUT_FAILED } from '../actions/loginActions';\r\n\r\nconst sessionString = 'loginstate';\r\nconst loadInitialState = () => {\r\n\tif ( sessionStorage.getItem (sessionString) ) \r\n\t{\r\n\t\tlet loginstate = JSON.parse(sessionStorage.getItem(sessionString));\r\n\t\tloginstate.error = \"\";\r\n\t\treturn loginstate;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn {\r\n\t\t\ttoken: '',\r\n\t\t\tuser: {},\r\n\t\t\tisLogged: false,\r\n\t\t\terror: '',\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const loginInit = loadInitialState ();\r\n\r\nexport const LoginReducer = (login, action) => {\r\n\tconsole.log('LoginReducer, action:', action);\r\n\tlet state = {};\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\tisLogged: true,\r\n\t\t\t\ttoken: action.data.token,\r\n\t\t\t\tuser: action.data.user,\r\n\t\t\t\terror: '',\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase LOGIN_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...login,\r\n\t\t\t\terror: action.error\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase LOGOUT_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\tisLogged: false,\r\n\t\t\t\ttoken: '',\r\n\t\t\t\tuser: {},\r\n\t\t\t\terror: ''\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase LOGOUT_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\tisLogged: false,\r\n\t\t\t\ttoken: '',\r\n\t\t\t\tuser: {},\r\n\t\t\t\terror: action.error\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn login;\r\n\t}\r\n\tsessionStorage.setItem(sessionString, JSON.stringify(state));\r\n\treturn state;\r\n}","//Action constants\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\r\n\r\n//Async Actions\r\nexport const onRegister = (dispatch, user) => {\r\n    let request = {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify(user),\r\n    };\r\n    // dispatch(loading());\r\n    fetch('/api/users', request).then((response) => {\r\n\t\t// dispatch(endLoading());\r\n        if (response.ok) {\r\n\t\t  dispatch(registerSuccess());\r\n        } else {\r\n          if (response.status === 409) {\r\n            dispatch(registerFailed('Register failed. Is username already in use?'));\r\n          } else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(registerFailed(`Server responded with status: ${data.error}`));\r\n            }).catch((error) => {\r\n\t\t\t  dispatch(registerFailed(`Server responded with status: ${response.status}`));\r\n            });\r\n          }\r\n        }\r\n\t}).catch((error) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tdispatch(registerFailed(`Server responded with status: ${error}`));\r\n\t});\r\n};\r\n// Action Creators\r\n\r\nexport const registerSuccess = () => {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const registerFailed = (error) => {\r\n  return {\r\n    type: REGISTER_FAILED,\r\n    error: error,\r\n  };\r\n};","import { REGISTER_SUCCESS,\r\n\tREGISTER_FAILED } from '../actions/registerActions';\r\n\r\nconst sessionString = 'registerstate';\r\nconst loadInitialState = () => {\r\n\tif ( sessionStorage.getItem (sessionString) ) \r\n\t{\r\n\t\tlet registerstate = JSON.parse(sessionStorage.getItem(sessionString));\r\n\t\tregisterstate.error = \"\";\r\n\t\tregisterstate.success = false;\r\n\t\treturn registerstate;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn {\r\n\t\t\terror: '',\r\n\t\t\tsuccess: false\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const registerInit = loadInitialState ();\r\n\r\nexport const RegisterReducer = (register, action) => {\r\n\tconsole.log('RegisterReducer, action:', action);\r\n\tlet state = {};\r\n\tswitch (action.type)\r\n\t{\r\n\t\tcase REGISTER_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...register,\r\n\t\t\t\terror: '',\r\n\t\t\t\tsuccess: true\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REGISTER_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...register,\r\n\t\t\t\terror: action.error,\r\n\t\t\t\tsuccess: false\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn register;\r\n\t}\r\n\tsessionStorage.setItem(sessionString, JSON.stringify(state));\r\n\treturn state;\r\n}","import { logoutSuccess } from './loginActions';\r\n\r\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\r\nexport const FETCH_CATEGORIES_FAILED = 'FETCH_CATEGORIES_FAILED';\r\nexport const FETCH_CATEGORY_SUCCESS = 'FETCH_CATEGORY_SUCCESS';\r\nexport const FETCH_CATEGORY_FAILED = 'FETCH_CATEGORY_FAILED';\r\nexport const FETCH_THREADS_SUCCESS = 'FETCH_THREADS_SUCCESS';\r\nexport const FETCH_THREADS_FAILED = 'FETCH_THREADS_FAILED';\r\nexport const FETCH_LATEST_THREADS_SUCCESS = 'FETCH_LATEST_THREADS_SUCCESS';\r\nexport const FETCH_LATEST_THREADS_FAILED = 'FETCH_LATEST_THREADS_FAILED';\r\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS';\r\nexport const ADD_CATEGORY_FAILED = 'ADD_CATEGORY_FAILED';\r\nexport const REMOVE_CATEGORY_SUCCESS = 'REMOVE_CATEGORY_SUCCESS';\r\nexport const REMOVE_CATEGORY_FAILED = 'REMOVE_CATEGORY_FAILED';\r\nexport const EDIT_CATEGORY_SUCCESS = 'EDIT_CATEGORY_SUCCESS';\r\nexport const EDIT_CATEGORY_FAILED = 'EDIT_CATEGORY_FAILED';\r\nexport const CLEAR_THREADS = 'CLEAR_THREADS';\r\n\r\n//ASync actions\r\n\r\nexport const getCategories = (dispatch, token) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = '/api/categories';\r\n\t// dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchCategoriesSuccess(data));\r\n\t\t\t\tfor ( let i = 0; i < data.length; ++i )\r\n\t\t\t\t\tgetLatestThreads(dispatch, token, data[i].id);\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchCategoriesFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tdispatch(fetchCategoriesFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\t\tdispatch(logoutSuccess());\r\n\t\t\t} else {\r\n\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\tdispatch(fetchCategoriesFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\tdispatch(fetchCategoriesFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tdispatch(fetchCategoriesFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const getCategory = (dispatch, token, id) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = `/api/categories/${id}`;\r\n\t//\t dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t//\t dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchCategorySuccess(data));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchCategoryFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tdispatch(fetchCategoryFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\t\tdispatch(logoutSuccess());\r\n\t\t\t} else {\r\n\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\tdispatch(fetchCategoryFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\tdispatch(fetchCategoryFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(fetchCategoryFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const getThreads = (dispatch, token, id, page) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = `/api/threads/pages?page=${page}&limit=5&category_id=${id}`;\r\n\t// dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchThreadsSuccess(data));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchThreadsFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tdispatch(fetchThreadsFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\t\tdispatch(logoutSuccess());\r\n\t\t\t} else {\r\n\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\tdispatch(fetchThreadsFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\tdispatch(fetchThreadsFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t// dispatch(endLoading());\r\n\t\tdispatch(fetchThreadsFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n}\r\n\r\nexport const getLatestThreads = (dispatch, token, id) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = `/api/threads/pages?page=1&limit=3&category_id=${id}`;\r\n\tfetch(url, request).then((response) => {\r\n\t\t\tif (response.ok) {\r\n\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\tdispatch(fetchLatestThreadsSuccess({threads:data.docs,id:id}));\r\n\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\tdispatch(fetchLatestThreadsFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (response.status === 403) {\r\n\t\t\t\t\tdispatch(fetchLatestThreadsFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\t\t\tdispatch(logoutSuccess());\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresponse.json().then((data) => {\r\n\t\t\t\t\t\tdispatch(fetchLatestThreadsFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t\t\t}).catch((error) => {\r\n\t\t\t\t\t\tdispatch(fetchLatestThreadsFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t}).catch((error) => {\r\n\t\tdispatch(fetchLatestThreadsFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n}\r\n\r\n//Action creators\r\n\r\nexport const clearCategories = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_THREADS\r\n\t};\r\n}\r\n\r\nexport const fetchCategoriesSuccess = (categories) => {\r\n\treturn {\r\n\t\ttype: FETCH_CATEGORIES_SUCCESS,\r\n\t\tcategories: categories,\r\n\t};\r\n};\r\n\r\nexport const fetchCategoriesFailed = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_CATEGORIES_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const fetchCategorySuccess = (category) => {\r\n\treturn {\r\n\t\ttype: FETCH_CATEGORY_SUCCESS,\r\n\t\tcategory: category,\r\n\t};\r\n};\r\n\t\r\nexport const fetchCategoryFailed = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_CATEGORY_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const fetchThreadsSuccess = (threads) => {\r\n\treturn {\r\n\t\tthreads: threads,\r\n\t\ttype: FETCH_THREADS_SUCCESS\r\n\t};\r\n};\r\n\t\r\nexport const fetchThreadsFailed = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_THREADS_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const fetchLatestThreadsSuccess = (data) => {\r\n\treturn {\r\n\t\tdata: data,\r\n\t\ttype: FETCH_LATEST_THREADS_SUCCESS\r\n\t};\r\n};\r\n\t\r\nexport const fetchLatestThreadsFailed = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_LATEST_THREADS_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const addCategorySuccess = () => {\r\n\treturn {\r\n\t\ttype: ADD_CATEGORY_SUCCESS,\r\n\t};\r\n};\r\n\r\nexport const addCategoryFailed = (error) => {\r\n\treturn {\r\n\t\ttype: ADD_CATEGORY_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const removeCategorySuccess = () => {\r\n\treturn {\r\n\t\ttype: REMOVE_CATEGORY_SUCCESS,\r\n\t};\r\n};\r\n\r\nexport const removeCategoryFailed = (error) => {\r\n\treturn {\r\n\t\ttype: REMOVE_CATEGORY_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const editCategorySuccess = () => {\r\n\treturn {\r\n\t\ttype: EDIT_CATEGORY_SUCCESS,\r\n\t};\r\n};\r\n\r\nexport const editCategoryFailed = (error) => {\r\n\treturn {\r\n\t\ttype: EDIT_CATEGORY_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};","import { FETCH_CATEGORIES_SUCCESS,\r\n\tFETCH_CATEGORIES_FAILED,\r\n\tFETCH_CATEGORY_SUCCESS,\r\n\tFETCH_CATEGORY_FAILED,\r\n\tFETCH_THREADS_SUCCESS,\r\n\tFETCH_THREADS_FAILED,\r\n\tFETCH_LATEST_THREADS_SUCCESS,\r\n\tFETCH_LATEST_THREADS_FAILED,\r\n\tADD_CATEGORY_SUCCESS,\r\n\tADD_CATEGORY_FAILED,\r\n\tREMOVE_CATEGORY_SUCCESS,\r\n\tREMOVE_CATEGORY_FAILED,\r\n\tEDIT_CATEGORY_SUCCESS,\r\n\tEDIT_CATEGORY_FAILED,\r\n\tCLEAR_THREADS } from '../actions/categoryActions';\r\n\r\nconst sessionString = 'categorystate';\r\nconst loadInitialState = () => {\r\n\tif ( sessionStorage.getItem (sessionString) ) \r\n\t{\r\n\t\tlet categorystate = JSON.parse(sessionStorage.getItem(sessionString));\r\n\t\tcategorystate.error = \"\";\r\n\t\treturn categorystate;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn {\r\n\t\t\tthreads: null,\r\n\t\t\tcategory: null,\r\n\t\t\tcategories: [],\r\n\t\t\terror: '',\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const categoryInit = loadInitialState ();\r\n\r\nexport const CategoryReducer = (category, action) => {\r\n\tconsole.log('CategoryReducer, action:', action);\r\n\tlet state = {};\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_CATEGORIES_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tcategories: action.categories,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_CATEGORIES_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_CATEGORY_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tcategory: action.category,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_CATEGORY_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_THREADS_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tthreads: action.threads,\r\n\t\t\t\terror: '',\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase FETCH_THREADS_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_LATEST_THREADS_SUCCESS:\r\n\t\t\tlet categories = [...category.categories];\r\n\t\t\tlet categoryIndex = categories.findIndex(category => category.id === action.data.id);\r\n\t\t\tcategories[categoryIndex].latest = action.data.threads;\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tcategories:categories,\r\n\t\t\t\terror: '',\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase FETCH_LATEST_THREADS_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase ADD_CATEGORY_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase ADD_CATEGORY_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_CATEGORY_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_CATEGORY_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase EDIT_CATEGORY_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase EDIT_CATEGORY_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase CLEAR_THREADS:\r\n\t\t\tstate = {\r\n\t\t\t\t...category,\r\n\t\t\t\tthreads: null,\r\n\t\t\t\terror: ''\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn category;\r\n\t}\r\n\tsessionStorage.setItem(sessionString, JSON.stringify(state));\r\n\treturn state;\r\n}","import { logoutSuccess } from './loginActions';\r\nimport { getCategory } from './categoryActions';\r\n\r\nexport const FETCH_THREAD_SUCCESS = 'FETCH_THREAD_SUCCESS';\r\nexport const FETCH_THREAD_FAILED = 'FETCH_THREAD_FAILED';\r\nexport const FETCH_COMMENT_SUCCESS = 'FETCH_COMMENT_SUCCESS';\r\nexport const FETCH_COMMENT_FAILED = 'FETCH_COMMENT_FAILED';\r\nexport const FETCH_COMMENTS_SUCCESS = 'FETCH_COMMENTS_SUCCESS';\r\nexport const FETCH_COMMENTS_FAILED = 'FETCH_COMMENTS_FAILED';\r\nexport const ADD_THREAD_SUCCESS = 'ADD_THREAD_SUCCESS';\r\nexport const ADD_THREAD_FAILED = 'ADD_THREAD_FAILED';\r\nexport const REMOVE_THREAD_SUCCESS = 'REMOVE_THREAD_SUCCESS';\r\nexport const REMOVE_THREAD_FAILED = 'REMOVE_THREAD_FAILED';\r\nexport const EDIT_THREAD_SUCCESS = 'EDIT_THREAD_SUCCESS';\r\nexport const EDIT_THREAD_FAILED = 'EDIT_THREAD_FAILED';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILED = 'ADD_COMMENT_FAILED';\r\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\r\nexport const REMOVE_COMMENT_FAILED = 'REMOVE_COMMENT_FAILED';\r\nexport const EDIT_COMMENT_SUCCESS = 'EDIT_COMMENT_SUCCESS';\r\nexport const EDIT_COMMENT_FAILED = 'EDIT_COMMENT_FAILED';\r\nexport const CLEAR_THREAD_AND_COMMENTS = 'CLEAR_THREAD_AND_COMMENTS';\r\n\r\n\r\nexport const getThread = (dispatch, token, id, fetchCategory = false) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = `/api/threads/${id}`;\r\n\t//dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchThreadSuccess(data));\r\n\t\t\t\tif (fetchCategory)\r\n\t\t\t\t\tgetCategory(dispatch, token, data.category_id, false);\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchThreadFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (response.status === 403) {\r\n\t\t\tdispatch(fetchThreadFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t\t} else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchThreadFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchThreadFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(fetchThreadFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const getComment = (dispatch, token, id) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = `/api/comments/${id}`;\r\n\t//dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchCommentSuccess(data));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchCommentFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (response.status === 403) {\r\n\t\t\tdispatch(fetchCommentFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t\t} else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchCommentFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchCommentFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t});\r\n\t\t\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(fetchCommentFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const getComments = (dispatch, token, id, page) => {\r\n\tlet request = {\r\n\t\tmethod: 'GET',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t};\r\n\tlet url = `/api/comments/pages?page=${page}&limit=10&thread_id=${id}`;\r\n\t//dispatch(loading());\r\n\t\tfetch(url, request).then((response) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchCommentsSuccess(data));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchCommentsFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (response.status === 403) {\r\n\t\t\tdispatch(fetchCommentsFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t\t} else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\t\tdispatch(fetchCommentsFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tdispatch(fetchCommentsFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(fetchCommentsFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const newThread = (dispatch, token, thread, history) => {\r\n\tlet request = {\r\n\t\tmethod: 'POST',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t\tbody: JSON.stringify(thread)\r\n\t};\r\n\tlet url = '/api/threads';\r\n\t//dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\tresponse.json().then((data) => {\r\n\t\t\tdispatch(addThreadSuccess());\r\n\t\t\thistory.push(`/t/${data.id}`);\r\n\t\t}).catch((error) => {\r\n\t\t\tdispatch(addThreadFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t});\r\n\t\t} else {\r\n\t\tif (response.status === 403) {\r\n\t\t\tdispatch(addThreadFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t} else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\tdispatch(addThreadFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t}).catch((error) => {\r\n\t\t\tdispatch(addThreadFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t});\r\n\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(addThreadFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const editThread = (dispatch, token, thread, history) => {\r\n\tlet request = {\r\n\t\tmethod: 'PUT',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t\tbody: JSON.stringify(thread)\r\n\t};\r\n\tlet url = '/api/threads';\r\n\t//dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\tdispatch(editThreadSuccess());\r\n\t\thistory.push(`/t/${thread.id}`);\r\n\t\t} else {\r\n\t\tif (response.status === 403) {\r\n\t\t\tdispatch(editThreadFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t} else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\tdispatch(editThreadFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t}).catch((error) => {\r\n\t\t\tdispatch(editThreadFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t});\r\n\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(editThreadFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const newComment = (dispatch, token, comment, history) => {\r\n\tlet request = {\r\n\t\tmethod: 'POST',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t\tbody: JSON.stringify(comment)\r\n\t};\r\n\tlet url = '/api/comments';\r\n\t//dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\tresponse.json().then((data) => {\r\n\t\t\tdispatch(addCommentSuccess());\r\n\t\t\thistory.push(`/t/${data.thread_id}`);\r\n\t\t}).catch((error) => {\r\n\t\t\tdispatch(addCommentFailed(`Failed to parse data. Try again error ${error}`));\r\n\t\t});\r\n\t\t} else {\r\n\t\tif (response.status === 403) {\r\n\t\t\tdispatch(addCommentFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t} else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\tdispatch(addCommentFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t}).catch((error) => {\r\n\t\t\tdispatch(addCommentFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t});\r\n\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(addCommentFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const editComment = (dispatch, token, comment, history) => {\r\n\tlet request = {\r\n\t\tmethod: 'PUT',\r\n\t\tmode: 'cors',\r\n\t\theaders: { 'Content-type': 'application/json', Authorization: `bearer ${token}` },\r\n\t\tbody: JSON.stringify(comment)\r\n\t};\r\n\tlet url = '/api/comments';\r\n\t////dispatch(loading());\r\n\tfetch(url, request).then((response) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tif (response.ok) {\r\n\t\tdispatch(editCommentSuccess());\r\n\t\thistory.push(`/t/${comment.thread_id}`);\r\n\t\t} else {\r\n\t\tif (response.status === 403) {\r\n\t\t\tdispatch(editCommentFailed('Server responded with a session failure. Logging out!'));\r\n\t\t\tdispatch(logoutSuccess());\r\n\t\t} else {\r\n\t\t\tresponse.json().then((data) => {\r\n\t\t\tdispatch(editCommentFailed(`Server responded with status: ${data.error}`));\r\n\t\t\t}).catch((error) => {\r\n\t\t\tdispatch(editCommentFailed(`Server responded with status: ${response.status}`));\r\n\t\t\t});\r\n\t\t}\r\n\t\t}\r\n\t}).catch((error) => {\r\n\t\t//dispatch(endLoading());\r\n\t\tdispatch(editCommentFailed(`Server responded with an error: ${error}`));\r\n\t});\r\n};\r\n\r\nexport const clearThreadAndComments = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_THREAD_AND_COMMENTS\r\n\t};\r\n}\r\n\r\nexport const fetchThreadSuccess = (thread) => {\r\n\treturn {\r\n\t\ttype: FETCH_THREAD_SUCCESS,\r\n\t\tthread: thread,\r\n\t};\r\n};\r\n\t\r\nexport const fetchThreadFailed = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_THREAD_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const fetchCommentSuccess = (comment) => {\r\n\treturn {\r\n\t\ttype: FETCH_COMMENT_SUCCESS,\r\n\t\tcomment: comment,\r\n\t};\r\n};\r\n\t\r\nexport const fetchCommentFailed = (error) => {\r\n\t\treturn {\r\n\t\ttype: FETCH_COMMENT_FAILED,\r\n\t\terror: error,\r\n\t\t};\r\n};\r\n\t\r\nexport const fetchCommentsSuccess = (comments) => {\r\n\treturn {\r\n\t\ttype: FETCH_COMMENTS_SUCCESS,\r\n\t\tcomments: comments,\r\n\t};\r\n};\r\n\t\r\nexport const fetchCommentsFailed = (error) => {\r\n\t\treturn {\r\n\t\ttype: FETCH_COMMENTS_FAILED,\r\n\t\terror: error,\r\n\t\t};\r\n};\r\n\t\r\nexport const addThreadSuccess = () => {\r\n\treturn {\r\n\t\ttype: ADD_THREAD_SUCCESS,\r\n\t};\r\n};\r\n\t\r\nexport const addThreadFailed = (error) => {\r\n\treturn {\r\n\t\ttype: ADD_THREAD_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\t\r\nexport const removeThreadSuccess = () => {\r\n\treturn {\r\n\t\ttype: REMOVE_THREAD_SUCCESS,\r\n\t};\r\n};\r\n\t\r\nexport const removeThreadFailed = (error) => {\r\n\treturn {\r\n\t\ttype: REMOVE_THREAD_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\t\r\nexport const editThreadSuccess = () => {\r\n\treturn {\r\n\t\ttype: EDIT_THREAD_SUCCESS,\r\n\t};\r\n};\r\n\t\r\nexport const editThreadFailed = (error) => {\r\n\treturn {\r\n\t\ttype: EDIT_THREAD_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\nexport const addCommentSuccess = () => {\r\n\treturn {\r\n\t\ttype: ADD_COMMENT_SUCCESS,\r\n\t};\r\n};\r\n\t\r\nexport const addCommentFailed = (error) => {\r\n\treturn {\r\n\t\ttype: ADD_COMMENT_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\t\r\nexport const removeCommentSuccess = () => {\r\n\treturn {\r\n\t\ttype: REMOVE_COMMENT_SUCCESS,\r\n\t};\r\n};\r\n\t\r\nexport const removeCommentFailed = (error) => {\r\n\treturn {\r\n\t\ttype: REMOVE_COMMENT_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\t\r\nexport const editCommentSuccess = () => {\r\n\treturn {\r\n\t\ttype: EDIT_COMMENT_SUCCESS,\r\n\t};\r\n};\r\n\t\r\nexport const editCommentFailed = (error) => {\r\n\treturn {\r\n\t\ttype: EDIT_COMMENT_FAILED,\r\n\t\terror: error,\r\n\t};\r\n};\r\n\r\n// export const fetchAuthorSuccess = (author) => {\r\n// \treturn {\r\n// \t\ttype: FETCH_AUTHOR_SUCCESS,\r\n// \t\tauthor: author,\r\n// \t};\r\n// };\r\n\t\r\n// export const fetchAuthorFailed = (error) => {\r\n// \treturn {\r\n// \t\ttype: FETCH_AUTHOR_FAILED,\r\n// \t\terror: error,\r\n// \t};\r\n// };","import { FETCH_THREAD_SUCCESS,\r\n\tFETCH_THREAD_FAILED,\r\n\tFETCH_COMMENT_SUCCESS,\r\n\tFETCH_COMMENT_FAILED,\r\n\tFETCH_COMMENTS_SUCCESS,\r\n\tFETCH_COMMENTS_FAILED,\r\n\tADD_THREAD_SUCCESS,\r\n\tADD_THREAD_FAILED,\r\n\tREMOVE_THREAD_SUCCESS,\r\n\tREMOVE_THREAD_FAILED,\r\n\tEDIT_THREAD_SUCCESS,\r\n\tEDIT_THREAD_FAILED,\r\n\tADD_COMMENT_SUCCESS,\r\n\tADD_COMMENT_FAILED,\r\n\tREMOVE_COMMENT_SUCCESS,\r\n\tREMOVE_COMMENT_FAILED,\r\n\tEDIT_COMMENT_SUCCESS,\r\n\tEDIT_COMMENT_FAILED,\r\n\tCLEAR_THREAD_AND_COMMENTS } from '../actions/threadActions';\r\n\r\nconst sessionString = 'threadstate';\r\nconst loadInitialState = () => {\r\n\tif ( sessionStorage.getItem (sessionString) ) \r\n\t{\r\n\t\tlet threadstate = JSON.parse(sessionStorage.getItem(sessionString));\r\n\t\tthreadstate.error = \"\";\r\n\t\treturn threadstate;\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn {\r\n\t\t\tthread: null,\r\n\t\t\tcomments: null,\r\n\t\t\tcomment: null,\r\n\t\t\terror: '',\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const threadInit = loadInitialState ();\r\n\r\nexport const ThreadReducer = (thread, action) => {\r\n\tconsole.log('ThreadReducer, action:', action);\r\n\tlet state = {};\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_THREAD_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\tthread: action.thread,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_THREAD_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_COMMENT_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\tcomment: action.comment,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_COMMENT_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_COMMENTS_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\tcomments: action.comments,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase FETCH_COMMENTS_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase ADD_THREAD_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase ADD_THREAD_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_THREAD_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_THREAD_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase EDIT_THREAD_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase EDIT_THREAD_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase ADD_COMMENT_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase ADD_COMMENT_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_COMMENT_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_COMMENT_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase EDIT_COMMENT_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: '',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase EDIT_COMMENT_FAILED:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\terror: action.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase CLEAR_THREAD_AND_COMMENTS:\r\n\t\t\tstate = {\r\n\t\t\t\t...thread,\r\n\t\t\t\tcomments: null,\r\n\t\t\t\tcomment: null,\r\n\t\t\t\tthread: null,\r\n\t\t\t\terror: ''\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn thread;\r\n\t}\r\n\tsessionStorage.setItem(sessionString, JSON.stringify(state));\r\n\treturn state;\r\n}","import { LoginReducer, loginInit } from './loginReducer';\r\nimport { RegisterReducer, registerInit } from './registerReducer';\r\nimport { CategoryReducer, categoryInit } from './categoryReducer';\r\nimport { ThreadReducer, threadInit } from './threadReducer';\r\n\r\nconst loadInitialState = () => {\r\n\treturn {\r\n\t\tlogin: loginInit,\r\n\t\tregister: registerInit,\r\n\t\tcategory: categoryInit,\r\n\t\tthread: threadInit\r\n\t};\r\n}\r\n\r\nexport const initialState = loadInitialState ();\r\n  \r\nexport const MainReducer = ({login, register, category, thread}, action) => {\r\n\treturn {\r\n\t\tlogin: LoginReducer ( login, action ),\r\n\t\tregister: RegisterReducer ( register, action ),\r\n\t\tcategory: CategoryReducer ( category, action),\r\n\t\tthread: ThreadReducer ( thread, action)\r\n\t};\r\n};","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const TText = ({v, g, p, c, color, children}) => {\r\n\tif ( !c )\r\n\t\tc = \"p\";\r\n\tif ( !v )\r\n\t\tv = \"body2\";\r\n\tif ( !color )\r\n\t\tcolor = \"initial\";\r\n\r\n\treturn (\r\n\t\t<Typography variant={v} gutterBottom={g} paragraph={p} component={c} color={color}>{children}</Typography>\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, TextField, Button, Paper, Tabs, Tab, Box } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nimport { onRegister } from '../actions/registerActions';\r\nimport { onLogin } from '../actions/loginActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport { TText } from './TText';\r\n\r\nfunction TabPanel(props) {\r\n\tconst { children, value, index } = props;\r\n  \r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}>\r\n\t\t\t{value === index && (\r\n\t\t\t\t<Box p={3}>\r\n\t\t\t\t\t<TText c=\"span\">{children}</TText>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'z-index': '1000',\r\n  \t\tposition: 'absolute',\r\n\t\twidth: '400px',\r\n\t\theight: '450px',\r\n\t\tpadding: '20px',\r\n\t\t\"align-items\": 'center',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\t'margin-top': '-225px',\r\n\t\t'margin-left': '-200px'\r\n\t},\r\n\tbox: {\r\n\t\theight: \"450px\"\r\n\t},\r\n\ttabs: {\r\n\t\theight: \"50px\"\r\n\t},\r\n\tcontent: {\r\n\t\theight: \"400px\",\r\n\t\t\"overflow-y\": \"auto\"\r\n\t},\r\n\tinput: {\r\n\t\tpaddingBottom: '10px',\r\n\t\t\"text-align\": 'left'\r\n\t},\r\n\talert: {\r\n\t\t\"text-align\": 'left'\r\n\t}\r\n}));\r\n\r\nconst Login = (props) => {\r\n\tconst [{login, register}, dispatch] = useStateValue();\r\n\tuseEffect(() => {\r\n\t\tif (login.isLogged)\r\n\t\t\tprops.closeLoginBar();\r\n\t}, [login.isLogged]);\r\n\tconst [tab, setTab] = useState(0);\r\n\tuseEffect(() => {\r\n\t\tsetTab(props.tab);\r\n\t}, [props.tab]);\r\n\tconst [loginForm, setloginForm] = useState({\r\n\t\tusername:\"\",\r\n\t\tpassword:\"\",\r\n\t\tnickname:\"\"\r\n\t});\r\n\r\n\tconst handleChange = (event, newValue) => {\r\n\t\tprops.openCloseLoginBar (newValue);\r\n\t\tsetTab(newValue);\r\n\t};\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetloginForm({\r\n\t\t\t...loginForm,\r\n\t\t\t[event.target.name]:event.target.value\r\n\t\t})\r\n\t};\r\n\t\r\n\tconst onLoginSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet user = {\r\n\t\t\temail: loginForm.username,\r\n\t\t\tpassword: loginForm.password\r\n\t\t}\r\n\t\tonLogin(dispatch, user, props.history);\r\n\t};\r\n\r\n\tconst onRegisterSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet user = {\r\n\t\t\temail: loginForm.username,\r\n\t\t\tpassword: loginForm.password,\r\n\t\t\tnickname: loginForm.nickname\r\n\t\t}\r\n\t\tonRegister(dispatch, user, props.history);\r\n\t};\r\n\r\n\t// const isLoading = .props.loading && <Spinner />;\r\n\tconst classes = useStyles();\r\n\r\n\tconst loginFail = login.error.length > 0 && (<React.Fragment>\r\n\t\t<Alert severity=\"error\" className={classes.alert}>\r\n\t\t\t<AlertTitle>Login was unsuccessful</AlertTitle>\r\n\t\t\t{login.error}\r\n\t\t</Alert>\r\n\t\t<br/>\r\n\t</React.Fragment>);\r\n\tconst registerSuccess = register.success && (<React.Fragment>\r\n\t\t<Alert severity=\"success\" className={classes.alert}>\r\n\t\t\tRegistration was successful, you may now login.\r\n\t\t</Alert>\r\n\t\t<br/>\r\n\t</React.Fragment>);\r\n\tconst registerFail = register.error.length > 0 && (<React.Fragment>\r\n\t\t<Alert severity=\"error\" className={classes.alert}>\r\n\t\t\t<AlertTitle>Registration was unsuccessful</AlertTitle>\r\n\t\t\t{register.error}\r\n\t\t</Alert>\r\n\t\t<br/>\r\n\t</React.Fragment>);\r\n\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<Paper elevation={2} className={classes.box}>\r\n\t\t\t\t\t<Tabs indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\" value={tab} onChange={handleChange} className={classes.tabs}>\r\n\t\t\t\t\t\t<Tab label=\"Register\" id='0'/>\r\n\t\t\t\t\t\t<Tab label=\"Login\" id='1'/>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t<center className={classes.content}>\r\n\t\t\t\t\t\t<TabPanel value={tab} index={0}>\r\n\t\t\t\t\t\t\t{registerSuccess || registerFail}\r\n\t\t\t\t\t\t\t<form onSubmit={props.onRegisterSubmit}>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Email\" name=\"username\" type=\"email\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Nickname\" name=\"nickname\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Password\" name=\"password\" type=\"password\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={onRegisterSubmit}>Register</Button>\r\n\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t<TabPanel value={tab} index={1}>\r\n\t\t\t\t\t\t\t{loginFail}\r\n\t\t\t\t\t\t\t<form onSubmit={props.onLoginSubmit}>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Email\" name=\"username\" type=\"email\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t<TextField label=\"Password\" name=\"password\" type=\"password\" required variant=\"outlined\" \r\n\t\t\t\t\t\t\t\t\tclassName={classes.input} onChange={onChange}/>\r\n\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" onClick={onLoginSubmit}>Log In</Button>\r\n\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t</center>\r\n\t\t\t\t</Paper>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Login);","import React, {useState} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, Toolbar, ButtonGroup, Button } from '@material-ui/core';\r\n\r\nimport Login from './Login';\r\nimport { onLogout } from '../actions/loginActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\n// import { TText } from './TText';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttoolbar: {\r\n\t\t'z-index': '1',\r\n\t\tbackgroundColor: `white`,\r\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\r\n\t\tposition: 'fixed',\r\n\t\twidth: `auto`,\r\n\t\tleft: `40px`,\r\n\t\tright: `40px`,\r\n\t\ttop: `0px`\r\n\t},\r\n\tButtonGroup: {\r\n\t\t'position': 'absolute', \r\n\t\t'right': '0px'\r\n\t}\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n\tconst [{login}, dispatch] = useStateValue();\r\n\r\n\tconst [loginBar, setLoginBar] = useState({\r\n\t\tshowLoginBar: false,\r\n\t\ttab: 1\r\n\t});\r\n\r\n\tconst onClickImage = (event, dest) => {\r\n\t\tevent.preventDefault();\r\n\t\tcloseLoginBar();\r\n\t\tprops.history.push(dest);\r\n\t}\r\n\r\n\tconst openCloseLoginBar = (tab) => {\r\n\t\tif(tab !== loginBar.tab)\r\n\t\t{\r\n\t\t\tsetLoginBar({showLoginBar: true, tab:tab});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tsetLoginBar({showLoginBar: !loginBar.showLoginBar, tab:tab});\r\n\t}\r\n\r\n\tconst closeLoginBar = () => {\r\n\t\tsetLoginBar({showLoginBar: false, tab:0});\r\n\t}\r\n\r\n\tconst buttonGroup = () => {\r\n\t\tif (login.isLogged)\r\n\t\t{\r\n\t\t\treturn (\r\n\t\t\t\t<ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\" className={classes.ButtonGroup}>\r\n\t\t\t\t\t<Button onClick={() => props.history.push('/')}>Welcome {login.user.nickname}</Button>\r\n\t\t\t\t\t<Button onClick={() => {onLogout(dispatch, login.token)}}>Logout</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ButtonGroup variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\" className={classes.ButtonGroup}>\r\n\t\t\t\t<Button onClick={() => openCloseLoginBar(0)}>Register</Button>\r\n\t\t\t\t<Button onClick={() => openCloseLoginBar(1)}>Login</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t);\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Toolbar variant=\"dense\" className={classes.toolbar}>\r\n\t\t\t\t<a href=\"/\" onClick={(e) => onClickImage (e, \"/\")}><img src={process.env.PUBLIC_URL + '/TF_logo.gif'} /></a>\r\n\t\t\t\t{buttonGroup()}\r\n\t\t\t</Toolbar>\r\n\t\t\t{loginBar.showLoginBar && <Login tab={loginBar.tab} openCloseLoginBar={openCloseLoginBar} closeLoginBar={closeLoginBar}/>}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(NavBar);","import React from 'react';\r\nimport { makeStyles, withStyles, TableRow, TableCell, Link } from '@material-ui/core';\r\n\r\nimport { TText } from './TText';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n\thead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: 14,\r\n\t\tverticalAlign:\"text-top\"\r\n\t},\r\n}))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcategoryLink: {\r\n\t\tcolor: \"inherit\",\r\n\t\t\"text-decoration\": \"none\", \r\n\t\t\"&:hover\":{\r\n\t\t\t\"color\": \"blue\"\r\n\t\t}\r\n\t},\r\n\tthreadLink: {\r\n\t\t\"text-decoration\": \"none\",\r\n\t\tmaxWidth: \"300px\",\r\n\t\toverflow: \"hidden\",\r\n\t\ttextOverflow: \"ellipsis\"\r\n\t},\r\n\tthreadCount: {\r\n\t\twidth: \"1px\"\r\n\t},\r\n\tcategory: {\r\n\t\twidth: \"50%\"\r\n\t}\r\n}));\r\n\r\nexport const CategoryRow = (props) => {\r\n\tconst { categoryName, threads, id, description, latest } = props.item;\r\n\tconst classes = useStyles();\r\n\tconst latestThreads = latest && latest.map((thread) => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment key={thread.id}>\r\n\t\t\t\t<TText v=\"button\"><a className={classes.threadLink} href={`/t/${thread.id}`} onClick={props.onClick}>{thread.threadName}</a></TText>\r\n\t\t\t\t<TText v=\"caption\"><a className={classes.threadLink} href={`/u/${thread.user_id}`} onClick={props.onClick}>{thread.author}</a> / {thread.lastModified}</TText>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t});\r\n    return (\r\n\t\t<StyledTableRow>\r\n\t\t\t<StyledTableCell component=\"th\" scope=\"row\" className={classes.category}>\r\n\t\t\t\t<TText v=\"h6\"><a className={classes.categoryLink} href={`/c/${id}`} onClick={props.onClick}>{categoryName}</a></TText>\r\n\t\t\t\t<TText v=\"caption\" c=\"span\">{description}</TText>\r\n\t\t\t</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\" className={classes.threadCount}>\r\n\t\t\t\t{threads ? threads.length : 0}\r\n\t\t\t</StyledTableCell>\r\n\t\t\t<StyledTableCell>\r\n\t\t\t\t{latestThreads}\r\n\t\t\t</StyledTableCell>\r\n\t\t</StyledTableRow>\r\n\t);\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { TableContainer, Table, TableBody, TableRow, TableHead, TableCell } from '@material-ui/core';\r\n\r\nimport { CategoryRow } from './CategoryRow';\r\n// import Spinner from './Spinner';\r\nimport { getCategories } from '../actions/categoryActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\n\r\nconst ListAllCategories = (props) => {\r\n\tconst [{login, category}, dispatch] = useStateValue();\r\n\tuseEffect(() => {\r\n\t\tgetCategories(dispatch, login.token);\r\n\t}, []);\r\n\r\n\tconst onClick = (event) => {\r\n\t\t// event.nativeEvent.stopImmediatePropagation();\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.push(event.target.getAttribute(\"href\"));\r\n\t};\r\n\r\n\tconsole.log(\"did this rerender?\");\r\n\tconst categories = category.categories.map((category) => {\r\n\t\treturn <CategoryRow key={category.id} item={category} onClick={onClick} />;\r\n\t});\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table size=\"small\" aria-label=\"simple table\">\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell>Category</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"right\" style={{width:\"1px\"}}>Threads</TableCell>\r\n\t\t\t\t\t\t\t<TableCell>Latests</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{categories}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(ListAllCategories);","import React from 'react';\r\nimport { makeStyles, withStyles, TableRow, TableCell, Link } from '@material-ui/core';\r\n\r\nimport { TText } from './TText';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n\thead: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: 14,\r\n\t\tverticalAlign:\"text-top\"\r\n\t},\r\n}))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n\troot: {\r\n\t\t'&:nth-of-type(odd)': {\r\n\t\t\tbackgroundColor: theme.palette.action.hover,\r\n\t\t},\r\n\t},\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcategory: {\r\n\t\t\"color\": \"inherit\",\r\n\t\t\"text-decoration\": \"none\", \r\n\t\t\"&:hover\":{\r\n\t\t\t\"color\": \"blue\"\r\n\t\t}\r\n\t},\r\n\tthread: {\r\n\t\t\"text-decoration\": \"none\",\r\n\t\tmaxWidth: \"300px\",\r\n\t\toverflow: \"hidden\",\r\n\t\ttextOverflow: \"ellipsis\"\r\n\t},\r\n\ttableCellCollapse: {\r\n\t\twidth: \"1px\"\r\n\t}\r\n}));\r\n\r\nexport const ThreadRow = (props) => {\r\n\tconst { threadName, comments, id, author, user_id, date } = props.item;\r\n\tconst classes = useStyles();\r\n    return (\r\n\t\t<StyledTableRow>\r\n\t\t\t<StyledTableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t<TText v=\"h6\">\r\n\t\t\t\t\t<a className={classes.category} href={`/t/${id}`} id={id} onClick={props.onClickThread}>{threadName}</a>\r\n\t\t\t\t</TText>\r\n\t\t\t\t<TText v=\"caption\" c=\"span\">\r\n\t\t\t\t\t<a href=\"\" id={user_id} onClick={props.onClickUser}>{author}</a> / {date}\r\n\t\t\t\t</TText>\r\n\t\t\t</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\" className={classes.tableCellCollapse}>\r\n\t\t\t\t{comments ? comments.length : 0}\r\n\t\t\t</StyledTableCell>\r\n\t\t\t<StyledTableCell align=\"right\" className={classes.tableCellCollapse}>\r\n\t\t\t\t0\r\n\t\t\t</StyledTableCell>\r\n\t\t</StyledTableRow>\r\n\t);\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, TableContainer, Table, TableBody, TableRow, TableHead, TableCell, Button } from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport { ThreadRow } from './ThreadRow';\r\nimport { getCategory, getThreads, clearCategories } from '../actions/categoryActions';\r\nimport { TText } from './TText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theader: {\r\n\t\tpaddingTop: \"20px\",\r\n\t\tpaddingBottom: \"10px\"\r\n\t},\r\n\tbottomHeader: {\r\n\t\tborderBottom: `0px solid ${theme.palette.divider}`,\r\n\t\tpaddingTop: \"10px\",\r\n\t\tpaddingBottom: \"30px\",\r\n\t\tpadding: \"0px\"\r\n\t},\r\n\tbottomButtonHeader: {\r\n\t\tborderBottom: `0px solid ${theme.palette.divider}`,\r\n\t\tpaddingTop: \"10px\",\r\n\t\tpaddingBottom: \"30px\",\r\n\t\tpadding: \"0px\",\r\n\t\ttextAlign: \"end\"\r\n\t},\r\n\ttableCellCollapse: {\r\n\t\twidth: \"1px\"\r\n\t}\r\n}));\r\n\r\nconst ViewCategory = (props) => {\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [{login, category}, dispatch] = useStateValue();\r\n\r\n\tuseEffect(() => {\r\n\t\tlet p = props.page ? parseInt(props.page) : page;\r\n\t\tgetCategory(dispatch, login.token, props.id);\r\n\t\tgetThreads(dispatch, login.token, props.id, p);\r\n\t\tsetPage(p);\r\n\t\treturn () => dispatch(clearCategories());\r\n\t}, []);\r\n\r\n\tconst onClickThread = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.push(`/t/${event.target.id}`);\r\n\t};\r\n\r\n\tconst onClickUser = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t};\r\n\r\n\tconst onClickBreadcrum = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.push(event.target.getAttribute(\"href\"));\r\n\t}\r\n\r\n\tconst handlePaginationChange = (e, p) => {\r\n\t\tprops.history.replace(`/c/${props.id}/page-${p}`);\r\n\t\tgetThreads(dispatch, login.token, props.id, p);\r\n\t\tsetPage(p);\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\tconst name = category.category ? category.category.categoryName : \"Category\";\r\n\tconst pagination = category.threads && <Pagination shape=\"rounded\"\r\n\t\tpage={page}\r\n\t\tcount={category.threads.pages}\r\n\t\tonChange={handlePaginationChange} />\r\n\tconst threads = category.threads && category.threads.docs.map((thread) => {\r\n\t\treturn <ThreadRow key={thread.id} item={thread} onClickThread={onClickThread} onClickUser={onClickUser} />;\r\n\t});\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TText v=\"caption\"><a href={`/`} onClick={onClickBreadcrum}>Home</a> / {name}</TText>\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell className={classes.header} padding=\"none\">\r\n\t\t\t\t\t\t\t\t<TText v=\"h4\">{name}</TText>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell/>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell className={classes.bottomHeader}>\r\n\t\t\t\t\t\t\t\t{pagination}\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell className={classes.bottomButtonHeader}>\r\n\t\t\t\t\t\t\t\t <Button \r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\" \r\n\t\t\t\t\t\t\t\t\tdisableElevation \r\n\t\t\t\t\t\t\t\t\tendIcon={<AddBoxIcon />}\r\n\t\t\t\t\t\t\t\t\tdisabled={!login.isLogged}\r\n\t\t\t\t\t\t\t\t\tonClick={() => props.history.push(`/c/${props.id}/new-thread/`)}>\r\n\t\t\t\t\t\t\t\t\tNew Thread \r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t<Table size=\"small\">\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\tThread\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellCollapse}>\r\n\t\t\t\t\t\t\t\tReplies\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"right\" className={classes.tableCellCollapse}>\r\n\t\t\t\t\t\t\t\tViews\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{threads}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(ViewCategory);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { makeStyles, Table, TableBody, TableRow, TableCell, Paper } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { useStateValue } from '../utils/StateProvider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding:\"10px\",\r\n\t\tmarginBottom:\"14px\",\r\n\t\tWebkitBoxShadow: `0 1px 2px 0 rgba(34,36,38,.15)`,\r\n\t\tboxShadow: `0 1px 2px 0 rgba(34,36,38,.15)`\r\n\t},\r\n\tcard: {\r\n\t\tWebkitBoxShadow: `0 1px 2px 0 rgba(34,36,38,.15)`,\r\n\t\tboxShadow: `0 1px 2px 0 rgba(34,36,38,.15)`,\r\n\t\twidth:\"280px\"\r\n\t},\r\n\ttableCell: {\r\n\t\tpadding: \"0px\",\r\n\t\tpaddingRight: \"10px\",\r\n\t\twidth: \"1px\",\r\n\t\tborderBottom: `0px solid`,\r\n\t\tverticalAlign: \"top\"\r\n\t},\r\n\ttableCellContent: {\r\n\t\tpadding: \"0px\",\r\n\t\tborderLeft: `1px solid ${theme.palette.divider}`,\r\n\t\tborderBottom: `0px solid`,\r\n\t\tpaddingLeft: \"10px\",\r\n\t\tverticalAlign: \"top\",\r\n\t\twhiteSpace: \"pre-wrap\"\r\n\t},\r\n\ttableCellBar: {\r\n\t\tpaddingBottom: \"10px\",\r\n\t\tposition: \"relative\",\r\n\t\topacity: \"0.45\"\r\n\t},\r\n\ttableCellBarButton: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: \"0px\"\r\n\t}\r\n}));\r\n\r\nconst CommentRow = (props) =>\r\n{\r\n\tconst [{login}] = useStateValue();\r\n\tconst { comment, id, author, user_id, date, thread_id } = props.item;\r\n\tconst isThread = props.isThread;\r\n\tconst tUrl = `/t/${thread_id}/`;\r\n\tconst editAndRemove = !( login.isLogged && ( login.user.userType === \"admin\" || login.user.id === user_id ) ) ? \"\" : \r\n\t(\r\n\t\t!isThread ? \r\n\t\t<React.Fragment><a href=\"\">Remove</a> / <a href={`${tUrl}edit-comment/${id}`} onClick={props.onClickCommentModify}>Edit</a> /</React.Fragment> :\r\n\t\t<React.Fragment><a href=\"\">Remove</a> / <a href={`${tUrl}edit-thread`} onClick={props.onClickCommentModify}>Edit</a> /</React.Fragment>\r\n\t);\r\n\tconst classes = useStyles();\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<Paper variant=\"outlined\" className={classes.root}>\r\n\t\t\t<Table>\r\n\t\t\t\t<TableBody padding=\"none\">\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TableCell className={classes.tableCell}>\r\n\t\t\t\t\t\t\t<Card variant=\"outlined\" className={classes.card}>\r\n\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t<Avatar aria-label=\"recipe\">\r\n\t\t\t\t\t\t\t\t\t\t\tR\r\n\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// action={\r\n\t\t\t\t\t\t\t\t\t// \t<IconButton aria-label=\"settings\">\r\n\t\t\t\t\t\t\t\t\t// \t\t<MoreVertIcon />\r\n\t\t\t\t\t\t\t\t\t// \t</IconButton>\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\ttitle={author}\r\n\t\t\t\t\t\t\t\t\t// subheader=\"\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell className={classes.tableCellContent}>\r\n\t\t\t\t\t\t\t<div className={classes.tableCellBar}>\r\n\t\t\t\t\t\t\t\t<div className={classes.tableCellBarButton}>\r\n\t\t\t\t\t\t\t\t\t{editAndRemove} <a href={`${tUrl}new-comment/thread`} onClick={props.onClickCommentModify}>Reply</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\tCreated {date} {/* - Modified {modified_date}*/}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{comment}\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nexport default withRouter(CommentRow);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, TableContainer, Table, TableBody, TableRow, TableHead, TableCell, Button, Paper } from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport CommentRow from './CommentRow';\r\nimport { getThread, getComments, clearThreadAndComments } from '../actions/threadActions';\r\nimport { TText } from './TText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\theaderTitle: {\r\n\t\tpadding: \"0px\",\r\n\t\tborderBottom: `0px solid ${theme.palette.divider}`,\r\n\t\tpaddingTop: \"20px\",\r\n\t\tpaddingBottom: \"10px\",\r\n\t\twhiteSpace: \"nowrap\"\r\n\t},\r\n\theaderDescription: {\r\n\t\tpadding: \"0px\",\r\n\t\twhiteSpace: \"pre-wrap\"\r\n\t},\r\n\tbottomHeader: {\r\n\t\tborderBottom: `0px solid ${theme.palette.divider}`,\r\n\t\tpaddingTop: \"10px\",\r\n\t\tpaddingBottom: \"30px\",\r\n\t\tpadding: \"0px\"\r\n\t},\r\n\tbottomButtonHeader: {\r\n\t\tborderBottom: `0px solid ${theme.palette.divider}`,\r\n\t\tpaddingTop: \"10px\",\r\n\t\tpaddingBottom: \"30px\",\r\n\t\tpadding: \"0px\",\r\n\t\ttextAlign: \"end\"\r\n\t},\r\n\ttableCellCollapse: {\r\n\t\twidth: \"1px\"\r\n\t}\r\n}));\r\n\r\nconst ViewThread = (props) => {\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [{login, category, thread}, dispatch] = useStateValue();\r\n\r\n\tuseEffect(() => {\r\n\t\tlet p = props.page ? parseInt(props.page) : page;\r\n\t\tgetThread(dispatch, login.token, props.id, true);\r\n\t\tgetComments(dispatch, login.token, props.id, p);\r\n\t\tsetPage(parseInt(p));\r\n\t\treturn () => dispatch(clearThreadAndComments());\r\n\t}, []);\r\n\r\n\tconst onClickBreadcrum = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.push(event.target.getAttribute(\"href\"));\r\n\t}\r\n\r\n\tconst onClickCommentModify = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.push(event.target.getAttribute(\"href\"));\r\n\t}\r\n\r\n\tconst handlePaginationChange = (e, p) => {\r\n\t\tprops.history.replace(`/t/${props.id}/page-${p}`);\r\n\t\tgetComments(dispatch, login.token, props.id, p);\r\n\t\tsetPage(p);\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\tconst categoryLoaded = category.category && thread.thread && thread.thread.category_id === category.category.id;\r\n\tconst categoryID = categoryLoaded ? category.category.id : 0;\r\n\tconst categoryName = categoryLoaded ? category.category.categoryName : \"Category\";\r\n\tconst threadName = thread.thread ? thread.thread.threadName : \"Thread\";\r\n\tconst comments = thread.comments && thread.comments.docs.map((comment) => {\r\n\t\treturn <CommentRow \r\n\t\t\tkey={comment.id} \r\n\t\t\titem={comment} \r\n\t\t\tisThread={false} \r\n\t\t\tonClickCommentModify={onClickCommentModify} />;\r\n\t});\r\n\tconst pagination = thread.comments && <Pagination shape=\"rounded\"\r\n\t\tpage={page}\r\n\t\tcount={thread.comments.pages}\r\n\t\tonChange={handlePaginationChange} />\r\n\tconst threadComment = !thread.thread ? {} : {\r\n\t\tcomment: thread.thread.description,\r\n\t\tauthor: thread.thread.author,\r\n\t\tthread_id: thread.thread.id,\r\n\t\tuser_id: thread.thread.user_id,\r\n\t\tdate: thread.thread.date\r\n\t};\r\n\tconsole.log(\"did this render?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TText v=\"caption\">\r\n\t\t\t\t<a href={`/`} onClick={onClickBreadcrum}>Home</a> / <a href={`/c/${categoryID}`} onClick={onClickBreadcrum}>{categoryName}</a> / {threadName}\r\n\t\t\t</TText>\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell className={classes.headerTitle}>\r\n\t\t\t\t\t\t\t\t<TText v=\"h4\">{threadName}</TText>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell className={classes.headerDescription}>\r\n\t\t\t\t\t\t\t\t<CommentRow \r\n\t\t\t\t\t\t\t\t\titem={threadComment} \r\n\t\t\t\t\t\t\t\t\tisThread={true}  \r\n\t\t\t\t\t\t\t\t\tonClickCommentModify={onClickCommentModify} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell className={classes.bottomHeader}>\r\n\t\t\t\t\t\t\t\t{pagination}\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell className={classes.bottomButtonHeader}>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\" \r\n\t\t\t\t\t\t\t\t\tdisableElevation \r\n\t\t\t\t\t\t\t\t\tendIcon={<AddBoxIcon />}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!login.isLogged}\r\n\t\t\t\t\t\t\t\t\tonClick={() => props.history.push(`/t/${props.id}/new-comment/`)}>\r\n\t\t\t\t\t\t\t\t\tNew Comment \r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t\t{comments}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(ViewThread);","import React from 'react';\r\nimport { makeStyles, TextField, Button, Paper, Box } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { TText } from './TText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpaddingTop: \"20px\"\r\n\t},\r\n\tpaper: {\r\n\t\tmarginTop: \"10px\",\r\n\t\tpadding: \"10px\",\r\n\t\tmarginBottom:\"14px\",\r\n\t\tborder: `1px solid ${theme.palette.divider}`,\r\n\t\tWebkitBoxShadow: `0 1px 2px 0 rgba(34,36,38,.15)`,\r\n\t\tboxShadow: `0 1px 2px 0 rgba(34,36,38,.15)`\r\n\t},\r\n\ttextField: {\r\n\t\tpaddingBottom: '10px',\r\n\t\twidth: '100%'\r\n\t},\r\n\talert: {\r\n\t\tmarginBottom: '10px',\r\n\t}\r\n}));\r\n\r\nexport default function ThreadForm (props) {\r\n\tconst onClickBreadcrum = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.push(event.target.getAttribute(\"href\"));\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\tconst { titleFail, commentFail, title, comment } = props.form;\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TText v=\"caption\">\r\n\t\t\t\t<a href={`/`} onClick={onClickBreadcrum}>Home</a> / <a href={`/c/${props.id}`} onClick={onClickBreadcrum}>{props.categoryName}</a>\r\n\t\t\t\t{props.editThread && <React.Fragment>{\" / \"}<a href={`/t/${props.thread_id}`} onClick={onClickBreadcrum}>{title}</a></React.Fragment>} / {props.header}\r\n\t\t\t</TText>\r\n\t\t\t<Box className={classes.root}>\r\n\t\t\t\t<TText v=\"h4\">{props.header}</TText>\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<form onSubmit={props.onSubmit}>\r\n\t\t\t\t\t\t{titleFail && <Alert severity=\"error\" className={classes.alert}>Title must not be empty or less than 4 letters</Alert>}\r\n\t\t\t\t\t\t<TextField label=\"Title\" name=\"title\" required variant=\"outlined\" className={classes.textField}\r\n\t\t\t\t\t\tonChange={props.onChange} value={title}/><br/>\r\n\t\t\t\t\t\t{commentFail && <Alert severity=\"error\" className={classes.alert}>Comment must not be empty</Alert>}\r\n\t\t\t\t\t\t<TextField label=\"Comment\" name=\"comment\" required variant=\"outlined\" className={classes.textField}\r\n\t\t\t\t\t\tonChange={props.onChange} multiline={true} rows={12} value={comment}>{comment}</TextField>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<Button variant=\"contained\" onClick={props.onSubmit} disableElevation>Submit</Button>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { getCategory } from '../actions/categoryActions';\r\nimport { newThread } from '../actions/threadActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport ThreadForm from './ThreadForm';\r\n\r\nconst NewThread = (props) => {\r\n\tconst [{login, category}, dispatch] = useStateValue();\r\n\tconst [form, setForm] = useState({\r\n\t\ttitle: '',\r\n\t\tcomment: '',\r\n\t\ttitleFail: false,\r\n\t\tcommentFail: false\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (category.category.id !== props.id)\r\n\t\t\tgetCategory(dispatch, login.token, props.id, false);\r\n\t}, []);\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t\t[`${event.target.name}Fail`]: false\r\n\t\t})\r\n\t};\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet state = {...form};\r\n\t\tlet errors = false;\r\n\r\n\t\tif (form.title.length === 0 || form.title.length < 4 )\r\n\t\t{\r\n\t\t\tstate.titleFail = true;\r\n\t\t\terrors = true;\r\n\t\t}\r\n\t\tif (form.comment.length === 0)\r\n\t\t{\r\n\t\t\tstate.commentFail = true;\r\n\t\t\terrors = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (errors)\r\n\t\t{\r\n\t\t\tsetForm(state);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst thread = {\r\n\t\t\tthreadName: form.title,\r\n\t\t\tdescription: form.comment,\r\n\t\t\tcategoryName: category.category.categoryName\r\n\t\t}\r\n\r\n\t\tnewThread(dispatch, login.token, thread, props.history);\r\n\t};\r\n\r\n\tconst categoryName = category.category ? category.category.categoryName : \"Category\";\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ThreadForm \r\n\t\t\t\tid={props.id} \r\n\t\t\t\tcategoryName={categoryName} \r\n\t\t\t\theader=\"New Thread\" \r\n\t\t\t\tonChange={onChange} \r\n\t\t\t\tonSubmit={onSubmit} \r\n\t\t\t\tform={{...form}} \r\n\t\t\t\thistory={props.history} \r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(NewThread);","import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { editThread, getThread } from '../actions/threadActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport ThreadForm from './ThreadForm';\r\n\r\nconst EditThread = (props) => {\r\n\tconst [{login, category, thread}, dispatch] = useStateValue();\r\n\tconst [form, setForm] = useState({\r\n\t\ttitle: '',\r\n\t\tcomment: '',\r\n\t\ttitleFail: false,\r\n\t\tcommentFail: false,\r\n\t\tthreadLoaded: false,\r\n\t\tloadingthread: false\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (thread.thread !== null && form.threadLoaded === false) {\r\n\t\t\tlet state = {...form};\r\n\t\t\tstate.threadLoaded = true;\r\n\t\t\tstate.title = thread.thread.threadName;\r\n\t\t\tstate.comment = thread.thread.description;\r\n\t\t\tsetForm(state);\r\n\t\t}\r\n\t}, [thread.thread, form.loadingthread]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetThread(dispatch, login.token, props.id, true);\r\n\t\tsetForm({...form, loadingthread:true});\r\n\t}, []);\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t\t[`${event.target.name}Fail`]: false\r\n\t\t})\r\n\t};\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet state = {...form};\r\n\t\tlet errors = false;\r\n\r\n\t\tif (form.title.length === 0 || form.title.length < 4 )\r\n\t\t{\r\n\t\t\tstate.titleFail = true;\r\n\t\t\terrors = true;\r\n\t\t}\r\n\t\tif (form.comment.length === 0)\r\n\t\t{\r\n\t\t\tstate.commentFail = true;\r\n\t\t\terrors = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (errors)\r\n\t\t{\r\n\t\t\tsetForm(state);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst t = {\r\n\t\t\tthreadName: form.title,\r\n\t\t\tdescription: form.comment,\r\n\t\t\tid: thread.thread.id\r\n\t\t}\r\n\r\n\t\teditThread(dispatch, login.token, t, props.history);\r\n\t};\r\n\r\n\tconst categoryName = category.category ? category.category.categoryName : \"Category\";\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{form.threadLoaded && <ThreadForm \r\n\t\t\t\tid={category.category.id} \r\n\t\t\t\tthread_id={thread.thread.id}\r\n\t\t\t\tcategoryName={categoryName}\r\n\t\t\t\theader=\"Edit Thread\" \r\n\t\t\t\tonChange={onChange} \r\n\t\t\t\tonSubmit={onSubmit} \r\n\t\t\t\tform={{...form}} \r\n\t\t\t\teditThread={true}\r\n\t\t\t\thistory={props.history} />\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(EditThread);","import React from 'react';\r\nimport { makeStyles, TextField, Button, Paper, Box } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { TText } from './TText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpaddingTop: \"20px\"\r\n\t},\r\n\tpaper: {\r\n\t\tmarginTop: \"10px\",\r\n\t\tpadding: \"10px\",\r\n\t\tmarginBottom:\"14px\",\r\n\t\tborder: `1px solid ${theme.palette.divider}`,\r\n\t\tWebkitBoxShadow: `0 1px 2px 0 rgba(34,36,38,.15)`,\r\n\t\tboxShadow: `0 1px 2px 0 rgba(34,36,38,.15)`\r\n\t},\r\n\ttextField: {\r\n\t\tpaddingBottom: '10px',\r\n\t\twidth: '100%'\r\n\t},\r\n\talert: {\r\n\t\tmarginBottom: '10px',\r\n\t}\r\n}));\r\n\r\nexport default function CommentForm (props) {\r\n\tconst onClickBreadcrum = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tprops.history.push(event.target.getAttribute(\"href\"));\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\tconst { commentFail, comment } = props.form;\r\n\tconst categoryName = props.category ? props.category.categoryName : \"Category\";\r\n\tconst threadLink = `/t/${props.thread.id}`;\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TText v=\"caption\">\r\n\t\t\t\t<a href={`/`} onClick={onClickBreadcrum}>Home</a> / <a href={`/c/${props.thread.category_id}`} onClick={onClickBreadcrum}>{categoryName}</a>\r\n\t\t\t\t<React.Fragment>{\" / \"}<a href={threadLink} onClick={onClickBreadcrum}>{props.thread.threadName}</a></React.Fragment> / {props.header}\r\n\t\t\t</TText>\r\n\t\t\t<Box className={classes.root}>\r\n\t\t\t\t<TText v=\"h4\">{props.header}</TText>\r\n\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t<form onSubmit={props.onSubmit}>\r\n\t\t\t\t\t\t{commentFail && <Alert severity=\"error\" className={classes.alert}>Comment must not be empty</Alert>}\r\n\t\t\t\t\t\t<TextField label=\"Comment\" name=\"comment\" required variant=\"outlined\" className={classes.textField}\r\n\t\t\t\t\t\tonChange={props.onChange} multiline={true} rows={12} value={comment}>{comment}</TextField>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<Button variant=\"contained\" onClick={props.onSubmit} disableElevation>Submit</Button>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Box>\r\n\t\t</React.Fragment>\r\n\t);\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { newComment, getThread } from '../actions/threadActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst NewComment = (props) => {\r\n\tconst [{login, category, thread}, dispatch] = useStateValue();\r\n\tconst [form, setForm] = useState({\r\n\t\tcomment: '',\r\n\t\tcommentFail: false,\r\n\t\tthreadLoaded: false,\r\n\t\tloadingthread: false\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (thread.thread !== null && form.threadLoaded === false)\r\n\t\t\tsetForm({...form, threadLoaded:true});\r\n\t}, [thread.thread, form.loadingthread]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetThread(dispatch, login.token, props.id, true);\r\n\t\tsetForm({...form, loadingthread:true});\r\n\t}, []);\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t\t[`${event.target.name}Fail`]: false\r\n\t\t})\r\n\t};\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (form.comment.length === 0)\r\n\t\t{\r\n\t\t\tsetForm({...form, commentFail:true});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst comment = {\r\n\t\t\tcomment: form.comment,\r\n\t\t\tthread_id: thread.thread.id\r\n\t\t}\r\n\r\n\t\tnewComment(dispatch, login.token, comment, props.history);\r\n\t};\r\n\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{form.threadLoaded && <CommentForm \r\n\t\t\t\tcategory={category.category}\r\n\t\t\t\tthread={thread.thread}\r\n\t\t\t\theader=\"New Comment\" \r\n\t\t\t\tonChange={onChange} \r\n\t\t\t\tonSubmit={onSubmit} \r\n\t\t\t\tform={{...form}}\r\n\t\t\t\thistory={props.history} />\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(NewComment);","import React, {useState, useEffect} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { editComment, getThread, getComment } from '../actions/threadActions';\r\nimport { useStateValue } from '../utils/StateProvider';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst EditComment = (props) => {\r\n\tconst [{login, category, thread}, dispatch] = useStateValue();\r\n\tconst [form, setForm] = useState({\r\n\t\tcomment: '',\r\n\t\tcommentFail: false,\r\n\t\tthreadLoaded: false,\r\n\t\tcommentLoaded: false,\r\n\t\tloadingthread: false\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlet state = {...form};\r\n\t\tlet stateUpdate = false;\r\n\r\n\t\tif (form.threadLoaded === false && thread.thread !== null)\r\n\t\t{\r\n\t\t\tstate.threadLoaded = true;\r\n\t\t\tstateUpdate = true;\r\n\t\t}\r\n\t\tif (form.commentLoaded === false && thread.comment !== null)\r\n\t\t{\r\n\t\t\tstate.commentLoaded = true;\r\n\t\t\tstate.comment = thread.comment.comment;\r\n\t\t\tstateUpdate = true;\r\n\t\t}\r\n\r\n\t\tif ( stateUpdate )\r\n\t\t\tsetForm(state);\r\n\t}, [thread, form.loadingthread]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetThread(dispatch, login.token, props.id, true);\r\n\t\tgetComment(dispatch, login.token, props.comment_id);\r\n\t\tsetForm({...form, loadingthread:true});\r\n\t}, []);\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t\t[`${event.target.name}Fail`]: false\r\n\t\t})\r\n\t};\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (form.comment.length === 0)\r\n\t\t{\r\n\t\t\tsetForm({...form, commentFail:true});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst comment = {\r\n\t\t\tcomment: form.comment,\r\n\t\t\tid: props.comment_id,\r\n\t\t\tthread_id: thread.thread.id\r\n\t\t}\r\n\r\n\t\teditComment(dispatch, login.token, comment, props.history)\r\n\t};\r\n\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{form.threadLoaded && form.commentLoaded && <CommentForm \r\n\t\t\t\tcategory={category.category}\r\n\t\t\t\tthread={thread.thread}\r\n\t\t\t\theader=\"Edit Comment\" \r\n\t\t\t\tonChange={onChange} \r\n\t\t\t\tonSubmit={onSubmit} \r\n\t\t\t\tform={{...form}} \r\n\t\t\t\thistory={props.history} />\r\n\t\t\t}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(EditComment);","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport { useStateValue } from './utils/StateProvider';\r\nimport NavBar from './components/NavBar';\r\nimport ListAllCategories from './components/ListAllCategories';\r\nimport ViewCategory from './components/ViewCategory';\r\nimport ViewThread from './components/ViewThread';\r\nimport NewThread from './components/NewThread';\r\nimport EditThread from './components/EditThread';\r\nimport NewComment from './components/NewComment';\r\nimport EditComment from './components/EditComment';\r\n\r\nconst App = ({ history, match }) => {\r\n\tconst [{login}] = useStateValue();\r\n\tconsole.log(\"did this rerender?\");\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<NavBar/>\r\n\t\t\t<Container maxWidth=\"lg\" style={{ 'paddingTop': '70px' }}>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/c/:id' render={({match}) => <ViewCategory id={match.params.id} />} />\r\n\t\t\t\t\t<Route exact path='/c/:id/page-:page' render={({match}) => <ViewCategory id={match.params.id} page={match.params.page} />} />\r\n\t\t\t\t\t<Route exact path='/c/:id/new-thread' render={({match}) => (!login.isLogged ? <Redirect to='/' /> : <NewThread id={match.params.id} />)} />\r\n\t\t\t\t\t<Route exact path='/t/:id' render={({match}) => <ViewThread id={match.params.id} />} />\r\n\t\t\t\t\t<Route exact path='/t/:id/page-:page' render={({match}) => <ViewThread id={match.params.id} page={match.params.page} />} />\r\n\t\t\t\t\t<Route exact path='/t/:id/edit-thread' render={({match}) => (!login.isLogged ? <Redirect to='/' /> : <EditThread id={match.params.id} />)} />\r\n\t\t\t\t\t<Route exact path='/t/:id/new-comment' render={({match}) => (!login.isLogged ? <Redirect to='/' /> : <NewComment id={match.params.id} history={history} />)} />\r\n\t\t\t\t\t<Route exact path='/t/:id/edit-comment/:comment_id' render={({match}) => \r\n\t\t\t\t\t\t(!login.isLogged ? <Redirect to='/' /> : <EditComment id={match.params.id} comment_id={match.params.comment_id} history={history} />)} />\r\n\t\t\t\t\t<Route render={() => <ListAllCategories/>} />\r\n\t\t\t\t</Switch>\r\n\t\t\t\t{/* \r\n\t\t\t\t<Route exact path='/users/' render={() => <ListAllUsers />} />\r\n\t\t\t\t<Route exact path='/t/:id/new-comment' render={({match}) => <NewComment id={match.params.id} history={history} />} />\r\n\t\t\t\t<Route exact path='/t/:id/edit-comment/:comment_id' render={({match}) => <EditComment id={match.params.id} comment_id={match.params.comment_id} history={history} />} />\r\n\t\t\t\t*/}\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\n// {/* <Route exact path='/user/:name' render={(props) => <GetUser name={match.params.name} />} /> */}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { StateProvider } from './utils/StateProvider';\r\nimport { initialState, MainReducer } from './reducers/reducers';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n\t\t<StateProvider initialState={initialState} reducer={MainReducer}>\r\n\t\t\t<App />\r\n\t\t</StateProvider>\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// if ('serviceWorker' in navigator) {\r\n//   navigator.serviceWorker\r\n//     .register('/serviceWorker.js')\r\n//     .then(function () {\r\n//       console.log('Service worker registered!');\r\n//     })\r\n//     .catch(function (err) {\r\n//       console.log(err);\r\n//     });\r\n// }\r\n"],"sourceRoot":""}